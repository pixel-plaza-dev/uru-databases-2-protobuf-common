// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.28.2
// source: proto/pixel_plaza/payment.proto

package payment

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddPayment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentAccountId  string                 `protobuf:"bytes,1,opt,name=payment_account_id,json=paymentAccountId,proto3" json:"payment_account_id,omitempty"`
	PaymentIdentifier string                 `protobuf:"bytes,2,opt,name=payment_identifier,json=paymentIdentifier,proto3" json:"payment_identifier,omitempty"`
	Amount            string                 `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	PaymentDate       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=payment_date,json=paymentDate,proto3" json:"payment_date,omitempty"`
}

func (x *AddPayment) Reset() {
	*x = AddPayment{}
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddPayment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPayment) ProtoMessage() {}

func (x *AddPayment) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPayment.ProtoReflect.Descriptor instead.
func (*AddPayment) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_payment_proto_rawDescGZIP(), []int{0}
}

func (x *AddPayment) GetPaymentAccountId() string {
	if x != nil {
		return x.PaymentAccountId
	}
	return ""
}

func (x *AddPayment) GetPaymentIdentifier() string {
	if x != nil {
		return x.PaymentIdentifier
	}
	return ""
}

func (x *AddPayment) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *AddPayment) GetPaymentDate() *timestamppb.Timestamp {
	if x != nil {
		return x.PaymentDate
	}
	return nil
}

type GetPayment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentAccountId  string                 `protobuf:"bytes,1,opt,name=payment_account_id,json=paymentAccountId,proto3" json:"payment_account_id,omitempty"`
	PaymentIdentifier string                 `protobuf:"bytes,2,opt,name=payment_identifier,json=paymentIdentifier,proto3" json:"payment_identifier,omitempty"`
	Amount            string                 `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	PaymentDate       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=payment_date,json=paymentDate,proto3" json:"payment_date,omitempty"`
	IsVerified        bool                   `protobuf:"varint,5,opt,name=is_verified,json=isVerified,proto3" json:"is_verified,omitempty"`
}

func (x *GetPayment) Reset() {
	*x = GetPayment{}
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPayment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayment) ProtoMessage() {}

func (x *GetPayment) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayment.ProtoReflect.Descriptor instead.
func (*GetPayment) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_payment_proto_rawDescGZIP(), []int{1}
}

func (x *GetPayment) GetPaymentAccountId() string {
	if x != nil {
		return x.PaymentAccountId
	}
	return ""
}

func (x *GetPayment) GetPaymentIdentifier() string {
	if x != nil {
		return x.PaymentIdentifier
	}
	return ""
}

func (x *GetPayment) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *GetPayment) GetPaymentDate() *timestamppb.Timestamp {
	if x != nil {
		return x.PaymentDate
	}
	return nil
}

func (x *GetPayment) GetIsVerified() bool {
	if x != nil {
		return x.IsVerified
	}
	return false
}

type PaymentAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform           string  `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"`
	AccountIdentifier  string  `protobuf:"bytes,2,opt,name=account_identifier,json=accountIdentifier,proto3" json:"account_identifier,omitempty"`
	AccountPhoneNumber *string `protobuf:"bytes,3,opt,name=account_phone_number,json=accountPhoneNumber,proto3,oneof" json:"account_phone_number,omitempty"`
	AccountEmail       *string `protobuf:"bytes,4,opt,name=account_email,json=accountEmail,proto3,oneof" json:"account_email,omitempty"`
	AccountName        *string `protobuf:"bytes,5,opt,name=account_name,json=accountName,proto3,oneof" json:"account_name,omitempty"`
}

func (x *PaymentAccount) Reset() {
	*x = PaymentAccount{}
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentAccount) ProtoMessage() {}

func (x *PaymentAccount) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentAccount.ProtoReflect.Descriptor instead.
func (*PaymentAccount) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_payment_proto_rawDescGZIP(), []int{2}
}

func (x *PaymentAccount) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *PaymentAccount) GetAccountIdentifier() string {
	if x != nil {
		return x.AccountIdentifier
	}
	return ""
}

func (x *PaymentAccount) GetAccountPhoneNumber() string {
	if x != nil && x.AccountPhoneNumber != nil {
		return *x.AccountPhoneNumber
	}
	return ""
}

func (x *PaymentAccount) GetAccountEmail() string {
	if x != nil && x.AccountEmail != nil {
		return *x.AccountEmail
	}
	return ""
}

func (x *PaymentAccount) GetAccountName() string {
	if x != nil && x.AccountName != nil {
		return *x.AccountName
	}
	return ""
}

type AddOrderPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId string      `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Payment *AddPayment `protobuf:"bytes,2,opt,name=payment,proto3" json:"payment,omitempty"`
}

func (x *AddOrderPaymentRequest) Reset() {
	*x = AddOrderPaymentRequest{}
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddOrderPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrderPaymentRequest) ProtoMessage() {}

func (x *AddOrderPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrderPaymentRequest.ProtoReflect.Descriptor instead.
func (*AddOrderPaymentRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_payment_proto_rawDescGZIP(), []int{3}
}

func (x *AddOrderPaymentRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *AddOrderPaymentRequest) GetPayment() *AddPayment {
	if x != nil {
		return x.Payment
	}
	return nil
}

type AddOrderPaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddOrderPaymentResponse) Reset() {
	*x = AddOrderPaymentResponse{}
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddOrderPaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrderPaymentResponse) ProtoMessage() {}

func (x *AddOrderPaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrderPaymentResponse.ProtoReflect.Descriptor instead.
func (*AddOrderPaymentResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_payment_proto_rawDescGZIP(), []int{4}
}

func (x *AddOrderPaymentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetOrderPaymentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *GetOrderPaymentsRequest) Reset() {
	*x = GetOrderPaymentsRequest{}
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrderPaymentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderPaymentsRequest) ProtoMessage() {}

func (x *GetOrderPaymentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderPaymentsRequest.ProtoReflect.Descriptor instead.
func (*GetOrderPaymentsRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_payment_proto_rawDescGZIP(), []int{5}
}

func (x *GetOrderPaymentsRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type GetOrderPaymentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message  string        `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Payments []*GetPayment `protobuf:"bytes,2,rep,name=payments,proto3" json:"payments,omitempty"`
}

func (x *GetOrderPaymentsResponse) Reset() {
	*x = GetOrderPaymentsResponse{}
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrderPaymentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderPaymentsResponse) ProtoMessage() {}

func (x *GetOrderPaymentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderPaymentsResponse.ProtoReflect.Descriptor instead.
func (*GetOrderPaymentsResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_payment_proto_rawDescGZIP(), []int{6}
}

func (x *GetOrderPaymentsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetOrderPaymentsResponse) GetPayments() []*GetPayment {
	if x != nil {
		return x.Payments
	}
	return nil
}

type AddBranchRentPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchRentId string      `protobuf:"bytes,1,opt,name=branch_rent_id,json=branchRentId,proto3" json:"branch_rent_id,omitempty"`
	Payment      *AddPayment `protobuf:"bytes,2,opt,name=payment,proto3" json:"payment,omitempty"`
}

func (x *AddBranchRentPaymentRequest) Reset() {
	*x = AddBranchRentPaymentRequest{}
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBranchRentPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBranchRentPaymentRequest) ProtoMessage() {}

func (x *AddBranchRentPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBranchRentPaymentRequest.ProtoReflect.Descriptor instead.
func (*AddBranchRentPaymentRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_payment_proto_rawDescGZIP(), []int{7}
}

func (x *AddBranchRentPaymentRequest) GetBranchRentId() string {
	if x != nil {
		return x.BranchRentId
	}
	return ""
}

func (x *AddBranchRentPaymentRequest) GetPayment() *AddPayment {
	if x != nil {
		return x.Payment
	}
	return nil
}

type AddBranchRentPaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddBranchRentPaymentResponse) Reset() {
	*x = AddBranchRentPaymentResponse{}
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBranchRentPaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBranchRentPaymentResponse) ProtoMessage() {}

func (x *AddBranchRentPaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBranchRentPaymentResponse.ProtoReflect.Descriptor instead.
func (*AddBranchRentPaymentResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_payment_proto_rawDescGZIP(), []int{8}
}

func (x *AddBranchRentPaymentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetBranchRentPaymentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchRentId string `protobuf:"bytes,1,opt,name=branch_rent_id,json=branchRentId,proto3" json:"branch_rent_id,omitempty"`
}

func (x *GetBranchRentPaymentsRequest) Reset() {
	*x = GetBranchRentPaymentsRequest{}
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBranchRentPaymentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBranchRentPaymentsRequest) ProtoMessage() {}

func (x *GetBranchRentPaymentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBranchRentPaymentsRequest.ProtoReflect.Descriptor instead.
func (*GetBranchRentPaymentsRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_payment_proto_rawDescGZIP(), []int{9}
}

func (x *GetBranchRentPaymentsRequest) GetBranchRentId() string {
	if x != nil {
		return x.BranchRentId
	}
	return ""
}

type GetBranchRentPaymentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message  string        `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Payments []*GetPayment `protobuf:"bytes,2,rep,name=payments,proto3" json:"payments,omitempty"`
}

func (x *GetBranchRentPaymentsResponse) Reset() {
	*x = GetBranchRentPaymentsResponse{}
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBranchRentPaymentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBranchRentPaymentsResponse) ProtoMessage() {}

func (x *GetBranchRentPaymentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBranchRentPaymentsResponse.ProtoReflect.Descriptor instead.
func (*GetBranchRentPaymentsResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_payment_proto_rawDescGZIP(), []int{10}
}

func (x *GetBranchRentPaymentsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetBranchRentPaymentsResponse) GetPayments() []*GetPayment {
	if x != nil {
		return x.Payments
	}
	return nil
}

type GetBranchRentsPaymentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=from,proto3,oneof" json:"from,omitempty"`
	To   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=to,proto3,oneof" json:"to,omitempty"`
}

func (x *GetBranchRentsPaymentsRequest) Reset() {
	*x = GetBranchRentsPaymentsRequest{}
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBranchRentsPaymentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBranchRentsPaymentsRequest) ProtoMessage() {}

func (x *GetBranchRentsPaymentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBranchRentsPaymentsRequest.ProtoReflect.Descriptor instead.
func (*GetBranchRentsPaymentsRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_payment_proto_rawDescGZIP(), []int{11}
}

func (x *GetBranchRentsPaymentsRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *GetBranchRentsPaymentsRequest) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

type GetBranchRentsPaymentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message  string        `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Payments []*GetPayment `protobuf:"bytes,2,rep,name=payments,proto3" json:"payments,omitempty"`
}

func (x *GetBranchRentsPaymentsResponse) Reset() {
	*x = GetBranchRentsPaymentsResponse{}
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBranchRentsPaymentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBranchRentsPaymentsResponse) ProtoMessage() {}

func (x *GetBranchRentsPaymentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBranchRentsPaymentsResponse.ProtoReflect.Descriptor instead.
func (*GetBranchRentsPaymentsResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_payment_proto_rawDescGZIP(), []int{12}
}

func (x *GetBranchRentsPaymentsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetBranchRentsPaymentsResponse) GetPayments() []*GetPayment {
	if x != nil {
		return x.Payments
	}
	return nil
}

type VerifyPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentId string `protobuf:"bytes,1,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
}

func (x *VerifyPaymentRequest) Reset() {
	*x = VerifyPaymentRequest{}
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyPaymentRequest) ProtoMessage() {}

func (x *VerifyPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyPaymentRequest.ProtoReflect.Descriptor instead.
func (*VerifyPaymentRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_payment_proto_rawDescGZIP(), []int{13}
}

func (x *VerifyPaymentRequest) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

type VerifyPaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *VerifyPaymentResponse) Reset() {
	*x = VerifyPaymentResponse{}
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyPaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyPaymentResponse) ProtoMessage() {}

func (x *VerifyPaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyPaymentResponse.ProtoReflect.Descriptor instead.
func (*VerifyPaymentResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_payment_proto_rawDescGZIP(), []int{14}
}

func (x *VerifyPaymentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AddPaymentAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentAccount *PaymentAccount `protobuf:"bytes,1,opt,name=payment_account,json=paymentAccount,proto3" json:"payment_account,omitempty"`
	BusinessId     *string         `protobuf:"bytes,2,opt,name=business_id,json=businessId,proto3,oneof" json:"business_id,omitempty"`
}

func (x *AddPaymentAccountRequest) Reset() {
	*x = AddPaymentAccountRequest{}
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddPaymentAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPaymentAccountRequest) ProtoMessage() {}

func (x *AddPaymentAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPaymentAccountRequest.ProtoReflect.Descriptor instead.
func (*AddPaymentAccountRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_payment_proto_rawDescGZIP(), []int{15}
}

func (x *AddPaymentAccountRequest) GetPaymentAccount() *PaymentAccount {
	if x != nil {
		return x.PaymentAccount
	}
	return nil
}

func (x *AddPaymentAccountRequest) GetBusinessId() string {
	if x != nil && x.BusinessId != nil {
		return *x.BusinessId
	}
	return ""
}

type AddPaymentAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddPaymentAccountResponse) Reset() {
	*x = AddPaymentAccountResponse{}
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddPaymentAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPaymentAccountResponse) ProtoMessage() {}

func (x *AddPaymentAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPaymentAccountResponse.ProtoReflect.Descriptor instead.
func (*AddPaymentAccountResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_payment_proto_rawDescGZIP(), []int{16}
}

func (x *AddPaymentAccountResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetPaymentAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId *string `protobuf:"bytes,1,opt,name=business_id,json=businessId,proto3,oneof" json:"business_id,omitempty"`
}

func (x *GetPaymentAccountsRequest) Reset() {
	*x = GetPaymentAccountsRequest{}
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPaymentAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentAccountsRequest) ProtoMessage() {}

func (x *GetPaymentAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentAccountsRequest.ProtoReflect.Descriptor instead.
func (*GetPaymentAccountsRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_payment_proto_rawDescGZIP(), []int{17}
}

func (x *GetPaymentAccountsRequest) GetBusinessId() string {
	if x != nil && x.BusinessId != nil {
		return *x.BusinessId
	}
	return ""
}

type GetPaymentAccountsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message         string            `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	PaymentAccounts []*PaymentAccount `protobuf:"bytes,2,rep,name=payment_accounts,json=paymentAccounts,proto3" json:"payment_accounts,omitempty"`
}

func (x *GetPaymentAccountsResponse) Reset() {
	*x = GetPaymentAccountsResponse{}
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPaymentAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentAccountsResponse) ProtoMessage() {}

func (x *GetPaymentAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentAccountsResponse.ProtoReflect.Descriptor instead.
func (*GetPaymentAccountsResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_payment_proto_rawDescGZIP(), []int{18}
}

func (x *GetPaymentAccountsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetPaymentAccountsResponse) GetPaymentAccounts() []*PaymentAccount {
	if x != nil {
		return x.PaymentAccounts
	}
	return nil
}

type GetActivePaymentAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId *string `protobuf:"bytes,1,opt,name=business_id,json=businessId,proto3,oneof" json:"business_id,omitempty"`
}

func (x *GetActivePaymentAccountsRequest) Reset() {
	*x = GetActivePaymentAccountsRequest{}
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActivePaymentAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActivePaymentAccountsRequest) ProtoMessage() {}

func (x *GetActivePaymentAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActivePaymentAccountsRequest.ProtoReflect.Descriptor instead.
func (*GetActivePaymentAccountsRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_payment_proto_rawDescGZIP(), []int{19}
}

func (x *GetActivePaymentAccountsRequest) GetBusinessId() string {
	if x != nil && x.BusinessId != nil {
		return *x.BusinessId
	}
	return ""
}

type GetActivePaymentAccountsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message         string            `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	PaymentAccounts []*PaymentAccount `protobuf:"bytes,2,rep,name=payment_accounts,json=paymentAccounts,proto3" json:"payment_accounts,omitempty"`
}

func (x *GetActivePaymentAccountsResponse) Reset() {
	*x = GetActivePaymentAccountsResponse{}
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActivePaymentAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActivePaymentAccountsResponse) ProtoMessage() {}

func (x *GetActivePaymentAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActivePaymentAccountsResponse.ProtoReflect.Descriptor instead.
func (*GetActivePaymentAccountsResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_payment_proto_rawDescGZIP(), []int{20}
}

func (x *GetActivePaymentAccountsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetActivePaymentAccountsResponse) GetPaymentAccounts() []*PaymentAccount {
	if x != nil {
		return x.PaymentAccounts
	}
	return nil
}

type GetSuspendedPaymentAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId *string `protobuf:"bytes,1,opt,name=business_id,json=businessId,proto3,oneof" json:"business_id,omitempty"`
}

func (x *GetSuspendedPaymentAccountsRequest) Reset() {
	*x = GetSuspendedPaymentAccountsRequest{}
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSuspendedPaymentAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSuspendedPaymentAccountsRequest) ProtoMessage() {}

func (x *GetSuspendedPaymentAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSuspendedPaymentAccountsRequest.ProtoReflect.Descriptor instead.
func (*GetSuspendedPaymentAccountsRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_payment_proto_rawDescGZIP(), []int{21}
}

func (x *GetSuspendedPaymentAccountsRequest) GetBusinessId() string {
	if x != nil && x.BusinessId != nil {
		return *x.BusinessId
	}
	return ""
}

type GetSuspendedPaymentAccountsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message         string            `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	PaymentAccounts []*PaymentAccount `protobuf:"bytes,2,rep,name=payment_accounts,json=paymentAccounts,proto3" json:"payment_accounts,omitempty"`
}

func (x *GetSuspendedPaymentAccountsResponse) Reset() {
	*x = GetSuspendedPaymentAccountsResponse{}
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSuspendedPaymentAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSuspendedPaymentAccountsResponse) ProtoMessage() {}

func (x *GetSuspendedPaymentAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSuspendedPaymentAccountsResponse.ProtoReflect.Descriptor instead.
func (*GetSuspendedPaymentAccountsResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_payment_proto_rawDescGZIP(), []int{22}
}

func (x *GetSuspendedPaymentAccountsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetSuspendedPaymentAccountsResponse) GetPaymentAccounts() []*PaymentAccount {
	if x != nil {
		return x.PaymentAccounts
	}
	return nil
}

type SuspendPaymentAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentAccountId string `protobuf:"bytes,1,opt,name=payment_account_id,json=paymentAccountId,proto3" json:"payment_account_id,omitempty"`
}

func (x *SuspendPaymentAccountRequest) Reset() {
	*x = SuspendPaymentAccountRequest{}
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuspendPaymentAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuspendPaymentAccountRequest) ProtoMessage() {}

func (x *SuspendPaymentAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuspendPaymentAccountRequest.ProtoReflect.Descriptor instead.
func (*SuspendPaymentAccountRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_payment_proto_rawDescGZIP(), []int{23}
}

func (x *SuspendPaymentAccountRequest) GetPaymentAccountId() string {
	if x != nil {
		return x.PaymentAccountId
	}
	return ""
}

type SuspendPaymentAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SuspendPaymentAccountResponse) Reset() {
	*x = SuspendPaymentAccountResponse{}
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuspendPaymentAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuspendPaymentAccountResponse) ProtoMessage() {}

func (x *SuspendPaymentAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuspendPaymentAccountResponse.ProtoReflect.Descriptor instead.
func (*SuspendPaymentAccountResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_payment_proto_rawDescGZIP(), []int{24}
}

func (x *SuspendPaymentAccountResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ActivatePaymentAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentAccountId string `protobuf:"bytes,1,opt,name=payment_account_id,json=paymentAccountId,proto3" json:"payment_account_id,omitempty"`
}

func (x *ActivatePaymentAccountRequest) Reset() {
	*x = ActivatePaymentAccountRequest{}
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivatePaymentAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivatePaymentAccountRequest) ProtoMessage() {}

func (x *ActivatePaymentAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivatePaymentAccountRequest.ProtoReflect.Descriptor instead.
func (*ActivatePaymentAccountRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_payment_proto_rawDescGZIP(), []int{25}
}

func (x *ActivatePaymentAccountRequest) GetPaymentAccountId() string {
	if x != nil {
		return x.PaymentAccountId
	}
	return ""
}

type ActivatePaymentAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ActivatePaymentAccountResponse) Reset() {
	*x = ActivatePaymentAccountResponse{}
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivatePaymentAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivatePaymentAccountResponse) ProtoMessage() {}

func (x *ActivatePaymentAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivatePaymentAccountResponse.ProtoReflect.Descriptor instead.
func (*ActivatePaymentAccountResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_payment_proto_rawDescGZIP(), []int{26}
}

func (x *ActivatePaymentAccountResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PayForOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId string      `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Payment *AddPayment `protobuf:"bytes,2,opt,name=payment,proto3" json:"payment,omitempty"`
}

func (x *PayForOrderRequest) Reset() {
	*x = PayForOrderRequest{}
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayForOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayForOrderRequest) ProtoMessage() {}

func (x *PayForOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayForOrderRequest.ProtoReflect.Descriptor instead.
func (*PayForOrderRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_payment_proto_rawDescGZIP(), []int{27}
}

func (x *PayForOrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *PayForOrderRequest) GetPayment() *AddPayment {
	if x != nil {
		return x.Payment
	}
	return nil
}

type PayForOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PayForOrderResponse) Reset() {
	*x = PayForOrderResponse{}
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayForOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayForOrderResponse) ProtoMessage() {}

func (x *PayForOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayForOrderResponse.ProtoReflect.Descriptor instead.
func (*PayForOrderResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_payment_proto_rawDescGZIP(), []int{28}
}

func (x *PayForOrderResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PayForBranchRentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchRentId string      `protobuf:"bytes,1,opt,name=branch_rent_id,json=branchRentId,proto3" json:"branch_rent_id,omitempty"`
	Payment      *AddPayment `protobuf:"bytes,2,opt,name=payment,proto3" json:"payment,omitempty"`
}

func (x *PayForBranchRentRequest) Reset() {
	*x = PayForBranchRentRequest{}
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayForBranchRentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayForBranchRentRequest) ProtoMessage() {}

func (x *PayForBranchRentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayForBranchRentRequest.ProtoReflect.Descriptor instead.
func (*PayForBranchRentRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_payment_proto_rawDescGZIP(), []int{29}
}

func (x *PayForBranchRentRequest) GetBranchRentId() string {
	if x != nil {
		return x.BranchRentId
	}
	return ""
}

func (x *PayForBranchRentRequest) GetPayment() *AddPayment {
	if x != nil {
		return x.Payment
	}
	return nil
}

type PayForBranchRentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PayForBranchRentResponse) Reset() {
	*x = PayForBranchRentResponse{}
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayForBranchRentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayForBranchRentResponse) ProtoMessage() {}

func (x *PayForBranchRentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_payment_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayForBranchRentResponse.ProtoReflect.Descriptor instead.
func (*PayForBranchRentResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_payment_proto_rawDescGZIP(), []int{30}
}

func (x *PayForBranchRentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_pixel_plaza_payment_proto protoreflect.FileDescriptor

var file_proto_pixel_plaza_payment_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c,
	0x61, 0x7a, 0x61, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0b, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xc0, 0x01, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c,
	0x0a, 0x12, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x12,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x22, 0xe1, 0x01, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x2d, 0x0a, 0x12, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0xa0, 0x02, 0x0a, 0x0e, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x14, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x12, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x17, 0x0a,
	0x15, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x66, 0x0a, 0x16, 0x41, 0x64, 0x64,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x31,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x41, 0x64,
	0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x22, 0x33, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x34, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61,
	0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x76, 0x0a, 0x1b, 0x41, 0x64, 0x64, 0x42, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x5f, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22,
	0x38, 0x0a, 0x1c, 0x41, 0x64, 0x64, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x44, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x5f, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x6e, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70,
	0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0x95, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e,
	0x74, 0x73, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x33, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01,
	0x52, 0x02, 0x74, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x66, 0x72, 0x6f, 0x6d,
	0x42, 0x05, 0x0a, 0x03, 0x5f, 0x74, 0x6f, 0x22, 0x6f, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x42, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x73, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c,
	0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x35, 0x0a, 0x14, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x31, 0x0a, 0x15, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x44, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c,
	0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x19, 0x41,
	0x64, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x51, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x24, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x5f, 0x69, 0x64, 0x22, 0x7e, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x46, 0x0a,
	0x10, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f,
	0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x57, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x22, 0x84,
	0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x46, 0x0a,
	0x10, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f,
	0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x5a, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x53, 0x75, 0x73, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0b, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69,
	0x64, 0x22, 0x87, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64,
	0x65, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x46, 0x0a, 0x10, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x4c, 0x0a, 0x1c, 0x53,
	0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x1d, 0x53, 0x75, 0x73,
	0x70, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x4d, 0x0a, 0x1d, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x1e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x62, 0x0a, 0x12, 0x50, 0x61, 0x79, 0x46, 0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x31, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e,
	0x41, 0x64, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x22, 0x2f, 0x0a, 0x13, 0x50, 0x61, 0x79, 0x46, 0x6f, 0x72, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x72, 0x0a, 0x17, 0x50, 0x61, 0x79, 0x46, 0x6f, 0x72, 0x42, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x24, 0x0a, 0x0e, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70,
	0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x34, 0x0a, 0x18, 0x50, 0x61, 0x79, 0x46,
	0x6f, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xe7,
	0x0b, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x5e, 0x0a, 0x0f, 0x41, 0x64,
	0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x2e,
	0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61,
	0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x24,
	0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61,
	0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a,
	0x14, 0x41, 0x64, 0x64, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c,
	0x61, 0x7a, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e,
	0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x41, 0x64,
	0x64, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x29, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c,
	0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e,
	0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2a, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x73,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x29, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c,
	0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x52, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a,
	0x61, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x58, 0x0a, 0x0d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x21, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61,
	0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c,
	0x61, 0x7a, 0x61, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x11, 0x41,
	0x64, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x25, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x41,
	0x64, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f,
	0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x67, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x26, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f,
	0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x2c, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70,
	0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61,
	0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x82, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x75, 0x73,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x2f, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c,
	0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70,
	0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x65,
	0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x15, 0x53, 0x75,
	0x73, 0x70, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x29, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a,
	0x61, 0x2e, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x53, 0x75, 0x73,
	0x70, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x16,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70,
	0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x52, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x46, 0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x1f, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x50,
	0x61, 0x79, 0x46, 0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e,
	0x50, 0x61, 0x79, 0x46, 0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x10, 0x50, 0x61, 0x79, 0x46, 0x6f, 0x72, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x2e, 0x70, 0x69, 0x78, 0x65,
	0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x50, 0x61, 0x79, 0x46, 0x6f, 0x72, 0x42, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x50, 0x61,
	0x79, 0x46, 0x6f, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x1e, 0x5a, 0x1c, 0x63, 0x6f, 0x6d, 0x70,
	0x69, 0x6c, 0x65, 0x64, 0x2f, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61,
	0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_pixel_plaza_payment_proto_rawDescOnce sync.Once
	file_proto_pixel_plaza_payment_proto_rawDescData = file_proto_pixel_plaza_payment_proto_rawDesc
)

func file_proto_pixel_plaza_payment_proto_rawDescGZIP() []byte {
	file_proto_pixel_plaza_payment_proto_rawDescOnce.Do(func() {
		file_proto_pixel_plaza_payment_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_pixel_plaza_payment_proto_rawDescData)
	})
	return file_proto_pixel_plaza_payment_proto_rawDescData
}

var file_proto_pixel_plaza_payment_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_proto_pixel_plaza_payment_proto_goTypes = []any{
	(*AddPayment)(nil),                          // 0: pixel_plaza.AddPayment
	(*GetPayment)(nil),                          // 1: pixel_plaza.GetPayment
	(*PaymentAccount)(nil),                      // 2: pixel_plaza.PaymentAccount
	(*AddOrderPaymentRequest)(nil),              // 3: pixel_plaza.AddOrderPaymentRequest
	(*AddOrderPaymentResponse)(nil),             // 4: pixel_plaza.AddOrderPaymentResponse
	(*GetOrderPaymentsRequest)(nil),             // 5: pixel_plaza.GetOrderPaymentsRequest
	(*GetOrderPaymentsResponse)(nil),            // 6: pixel_plaza.GetOrderPaymentsResponse
	(*AddBranchRentPaymentRequest)(nil),         // 7: pixel_plaza.AddBranchRentPaymentRequest
	(*AddBranchRentPaymentResponse)(nil),        // 8: pixel_plaza.AddBranchRentPaymentResponse
	(*GetBranchRentPaymentsRequest)(nil),        // 9: pixel_plaza.GetBranchRentPaymentsRequest
	(*GetBranchRentPaymentsResponse)(nil),       // 10: pixel_plaza.GetBranchRentPaymentsResponse
	(*GetBranchRentsPaymentsRequest)(nil),       // 11: pixel_plaza.GetBranchRentsPaymentsRequest
	(*GetBranchRentsPaymentsResponse)(nil),      // 12: pixel_plaza.GetBranchRentsPaymentsResponse
	(*VerifyPaymentRequest)(nil),                // 13: pixel_plaza.VerifyPaymentRequest
	(*VerifyPaymentResponse)(nil),               // 14: pixel_plaza.VerifyPaymentResponse
	(*AddPaymentAccountRequest)(nil),            // 15: pixel_plaza.AddPaymentAccountRequest
	(*AddPaymentAccountResponse)(nil),           // 16: pixel_plaza.AddPaymentAccountResponse
	(*GetPaymentAccountsRequest)(nil),           // 17: pixel_plaza.GetPaymentAccountsRequest
	(*GetPaymentAccountsResponse)(nil),          // 18: pixel_plaza.GetPaymentAccountsResponse
	(*GetActivePaymentAccountsRequest)(nil),     // 19: pixel_plaza.GetActivePaymentAccountsRequest
	(*GetActivePaymentAccountsResponse)(nil),    // 20: pixel_plaza.GetActivePaymentAccountsResponse
	(*GetSuspendedPaymentAccountsRequest)(nil),  // 21: pixel_plaza.GetSuspendedPaymentAccountsRequest
	(*GetSuspendedPaymentAccountsResponse)(nil), // 22: pixel_plaza.GetSuspendedPaymentAccountsResponse
	(*SuspendPaymentAccountRequest)(nil),        // 23: pixel_plaza.SuspendPaymentAccountRequest
	(*SuspendPaymentAccountResponse)(nil),       // 24: pixel_plaza.SuspendPaymentAccountResponse
	(*ActivatePaymentAccountRequest)(nil),       // 25: pixel_plaza.ActivatePaymentAccountRequest
	(*ActivatePaymentAccountResponse)(nil),      // 26: pixel_plaza.ActivatePaymentAccountResponse
	(*PayForOrderRequest)(nil),                  // 27: pixel_plaza.PayForOrderRequest
	(*PayForOrderResponse)(nil),                 // 28: pixel_plaza.PayForOrderResponse
	(*PayForBranchRentRequest)(nil),             // 29: pixel_plaza.PayForBranchRentRequest
	(*PayForBranchRentResponse)(nil),            // 30: pixel_plaza.PayForBranchRentResponse
	(*timestamppb.Timestamp)(nil),               // 31: google.protobuf.Timestamp
}
var file_proto_pixel_plaza_payment_proto_depIdxs = []int32{
	31, // 0: pixel_plaza.AddPayment.payment_date:type_name -> google.protobuf.Timestamp
	31, // 1: pixel_plaza.GetPayment.payment_date:type_name -> google.protobuf.Timestamp
	0,  // 2: pixel_plaza.AddOrderPaymentRequest.payment:type_name -> pixel_plaza.AddPayment
	1,  // 3: pixel_plaza.GetOrderPaymentsResponse.payments:type_name -> pixel_plaza.GetPayment
	0,  // 4: pixel_plaza.AddBranchRentPaymentRequest.payment:type_name -> pixel_plaza.AddPayment
	1,  // 5: pixel_plaza.GetBranchRentPaymentsResponse.payments:type_name -> pixel_plaza.GetPayment
	31, // 6: pixel_plaza.GetBranchRentsPaymentsRequest.from:type_name -> google.protobuf.Timestamp
	31, // 7: pixel_plaza.GetBranchRentsPaymentsRequest.to:type_name -> google.protobuf.Timestamp
	1,  // 8: pixel_plaza.GetBranchRentsPaymentsResponse.payments:type_name -> pixel_plaza.GetPayment
	2,  // 9: pixel_plaza.AddPaymentAccountRequest.payment_account:type_name -> pixel_plaza.PaymentAccount
	2,  // 10: pixel_plaza.GetPaymentAccountsResponse.payment_accounts:type_name -> pixel_plaza.PaymentAccount
	2,  // 11: pixel_plaza.GetActivePaymentAccountsResponse.payment_accounts:type_name -> pixel_plaza.PaymentAccount
	2,  // 12: pixel_plaza.GetSuspendedPaymentAccountsResponse.payment_accounts:type_name -> pixel_plaza.PaymentAccount
	0,  // 13: pixel_plaza.PayForOrderRequest.payment:type_name -> pixel_plaza.AddPayment
	0,  // 14: pixel_plaza.PayForBranchRentRequest.payment:type_name -> pixel_plaza.AddPayment
	3,  // 15: pixel_plaza.Payment.AddOrderPayment:input_type -> pixel_plaza.AddOrderPaymentRequest
	5,  // 16: pixel_plaza.Payment.GetOrderPayments:input_type -> pixel_plaza.GetOrderPaymentsRequest
	7,  // 17: pixel_plaza.Payment.AddBranchRentPayment:input_type -> pixel_plaza.AddBranchRentPaymentRequest
	9,  // 18: pixel_plaza.Payment.GetBranchRentPayments:input_type -> pixel_plaza.GetBranchRentPaymentsRequest
	9,  // 19: pixel_plaza.Payment.GetBranchRentsPayments:input_type -> pixel_plaza.GetBranchRentPaymentsRequest
	13, // 20: pixel_plaza.Payment.VerifyPayment:input_type -> pixel_plaza.VerifyPaymentRequest
	15, // 21: pixel_plaza.Payment.AddPaymentAccount:input_type -> pixel_plaza.AddPaymentAccountRequest
	17, // 22: pixel_plaza.Payment.GetPaymentAccounts:input_type -> pixel_plaza.GetPaymentAccountsRequest
	19, // 23: pixel_plaza.Payment.GetActivePaymentAccounts:input_type -> pixel_plaza.GetActivePaymentAccountsRequest
	21, // 24: pixel_plaza.Payment.GetSuspendedPaymentAccounts:input_type -> pixel_plaza.GetSuspendedPaymentAccountsRequest
	23, // 25: pixel_plaza.Payment.SuspendPaymentAccount:input_type -> pixel_plaza.SuspendPaymentAccountRequest
	25, // 26: pixel_plaza.Payment.ActivatePaymentAccount:input_type -> pixel_plaza.ActivatePaymentAccountRequest
	27, // 27: pixel_plaza.Payment.PayForOrder:input_type -> pixel_plaza.PayForOrderRequest
	29, // 28: pixel_plaza.Payment.PayForBranchRent:input_type -> pixel_plaza.PayForBranchRentRequest
	4,  // 29: pixel_plaza.Payment.AddOrderPayment:output_type -> pixel_plaza.AddOrderPaymentResponse
	6,  // 30: pixel_plaza.Payment.GetOrderPayments:output_type -> pixel_plaza.GetOrderPaymentsResponse
	8,  // 31: pixel_plaza.Payment.AddBranchRentPayment:output_type -> pixel_plaza.AddBranchRentPaymentResponse
	10, // 32: pixel_plaza.Payment.GetBranchRentPayments:output_type -> pixel_plaza.GetBranchRentPaymentsResponse
	10, // 33: pixel_plaza.Payment.GetBranchRentsPayments:output_type -> pixel_plaza.GetBranchRentPaymentsResponse
	14, // 34: pixel_plaza.Payment.VerifyPayment:output_type -> pixel_plaza.VerifyPaymentResponse
	16, // 35: pixel_plaza.Payment.AddPaymentAccount:output_type -> pixel_plaza.AddPaymentAccountResponse
	18, // 36: pixel_plaza.Payment.GetPaymentAccounts:output_type -> pixel_plaza.GetPaymentAccountsResponse
	20, // 37: pixel_plaza.Payment.GetActivePaymentAccounts:output_type -> pixel_plaza.GetActivePaymentAccountsResponse
	22, // 38: pixel_plaza.Payment.GetSuspendedPaymentAccounts:output_type -> pixel_plaza.GetSuspendedPaymentAccountsResponse
	24, // 39: pixel_plaza.Payment.SuspendPaymentAccount:output_type -> pixel_plaza.SuspendPaymentAccountResponse
	26, // 40: pixel_plaza.Payment.ActivatePaymentAccount:output_type -> pixel_plaza.ActivatePaymentAccountResponse
	28, // 41: pixel_plaza.Payment.PayForOrder:output_type -> pixel_plaza.PayForOrderResponse
	30, // 42: pixel_plaza.Payment.PayForBranchRent:output_type -> pixel_plaza.PayForBranchRentResponse
	29, // [29:43] is the sub-list for method output_type
	15, // [15:29] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_proto_pixel_plaza_payment_proto_init() }
func file_proto_pixel_plaza_payment_proto_init() {
	if File_proto_pixel_plaza_payment_proto != nil {
		return
	}
	file_proto_pixel_plaza_payment_proto_msgTypes[2].OneofWrappers = []any{}
	file_proto_pixel_plaza_payment_proto_msgTypes[11].OneofWrappers = []any{}
	file_proto_pixel_plaza_payment_proto_msgTypes[15].OneofWrappers = []any{}
	file_proto_pixel_plaza_payment_proto_msgTypes[17].OneofWrappers = []any{}
	file_proto_pixel_plaza_payment_proto_msgTypes[19].OneofWrappers = []any{}
	file_proto_pixel_plaza_payment_proto_msgTypes[21].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_pixel_plaza_payment_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_pixel_plaza_payment_proto_goTypes,
		DependencyIndexes: file_proto_pixel_plaza_payment_proto_depIdxs,
		MessageInfos:      file_proto_pixel_plaza_payment_proto_msgTypes,
	}.Build()
	File_proto_pixel_plaza_payment_proto = out.File
	file_proto_pixel_plaza_payment_proto_rawDesc = nil
	file_proto_pixel_plaza_payment_proto_goTypes = nil
	file_proto_pixel_plaza_payment_proto_depIdxs = nil
}
