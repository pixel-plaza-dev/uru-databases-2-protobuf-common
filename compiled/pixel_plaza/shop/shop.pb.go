// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.28.2
// source: proto/pixel_plaza/shop.proto

package shop

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Store struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MallFloor    int32  `protobuf:"varint,1,opt,name=mall_floor,json=mallFloor,proto3" json:"mall_floor,omitempty"`
	StoreNumber  string `protobuf:"bytes,2,opt,name=store_number,json=storeNumber,proto3" json:"store_number,omitempty"`
	SquareMeters int32  `protobuf:"varint,3,opt,name=square_meters,json=squareMeters,proto3" json:"square_meters,omitempty"`
	Floors       int32  `protobuf:"varint,4,opt,name=floors,proto3" json:"floors,omitempty"`
}

func (x *Store) Reset() {
	*x = Store{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Store) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Store) ProtoMessage() {}

func (x *Store) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Store.ProtoReflect.Descriptor instead.
func (*Store) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{0}
}

func (x *Store) GetMallFloor() int32 {
	if x != nil {
		return x.MallFloor
	}
	return 0
}

func (x *Store) GetStoreNumber() string {
	if x != nil {
		return x.StoreNumber
	}
	return ""
}

func (x *Store) GetSquareMeters() int32 {
	if x != nil {
		return x.SquareMeters
	}
	return 0
}

func (x *Store) GetFloors() int32 {
	if x != nil {
		return x.Floors
	}
	return 0
}

type MarketCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *MarketCategory) Reset() {
	*x = MarketCategory{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarketCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketCategory) ProtoMessage() {}

func (x *MarketCategory) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketCategory.ProtoReflect.Descriptor instead.
func (*MarketCategory) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{1}
}

func (x *MarketCategory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MarketCategory) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type AddBranchRent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreId string                 `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	From    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Price   float32                `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *AddBranchRent) Reset() {
	*x = AddBranchRent{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBranchRent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBranchRent) ProtoMessage() {}

func (x *AddBranchRent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBranchRent.ProtoReflect.Descriptor instead.
func (*AddBranchRent) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{2}
}

func (x *AddBranchRent) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *AddBranchRent) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *AddBranchRent) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *AddBranchRent) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type GetBranchRent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreId    string                 `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	From       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Price      float32                `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
	PaidAmount float32                `protobuf:"fixed32,5,opt,name=paid_amount,json=paidAmount,proto3" json:"paid_amount,omitempty"`
}

func (x *GetBranchRent) Reset() {
	*x = GetBranchRent{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBranchRent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBranchRent) ProtoMessage() {}

func (x *GetBranchRent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBranchRent.ProtoReflect.Descriptor instead.
func (*GetBranchRent) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{3}
}

func (x *GetBranchRent) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *GetBranchRent) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *GetBranchRent) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *GetBranchRent) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *GetBranchRent) GetPaidAmount() float32 {
	if x != nil {
		return x.PaidAmount
	}
	return 0
}

type GetBusinessBranchRent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId    string           `protobuf:"bytes,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	BranchRents []*GetBranchRent `protobuf:"bytes,2,rep,name=branch_rents,json=branchRents,proto3" json:"branch_rents,omitempty"`
}

func (x *GetBusinessBranchRent) Reset() {
	*x = GetBusinessBranchRent{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBusinessBranchRent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessBranchRent) ProtoMessage() {}

func (x *GetBusinessBranchRent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessBranchRent.ProtoReflect.Descriptor instead.
func (*GetBusinessBranchRent) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{4}
}

func (x *GetBusinessBranchRent) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *GetBusinessBranchRent) GetBranchRents() []*GetBranchRent {
	if x != nil {
		return x.BranchRents
	}
	return nil
}

type ProductCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ProductCategory) Reset() {
	*x = ProductCategory{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductCategory) ProtoMessage() {}

func (x *ProductCategory) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductCategory.ProtoReflect.Descriptor instead.
func (*ProductCategory) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{5}
}

func (x *ProductCategory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductCategory) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Toy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgeGroup string `protobuf:"bytes,2,opt,name=age_group,json=ageGroup,proto3" json:"age_group,omitempty"`
	ToyType  string `protobuf:"bytes,3,opt,name=toy_type,json=toyType,proto3" json:"toy_type,omitempty"`
}

func (x *Toy) Reset() {
	*x = Toy{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Toy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Toy) ProtoMessage() {}

func (x *Toy) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Toy.ProtoReflect.Descriptor instead.
func (*Toy) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{6}
}

func (x *Toy) GetAgeGroup() string {
	if x != nil {
		return x.AgeGroup
	}
	return ""
}

func (x *Toy) GetToyType() string {
	if x != nil {
		return x.ToyType
	}
	return ""
}

type UpdateToy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgeGroup *string `protobuf:"bytes,2,opt,name=age_group,json=ageGroup,proto3,oneof" json:"age_group,omitempty"`
	ToyType  *string `protobuf:"bytes,3,opt,name=toy_type,json=toyType,proto3,oneof" json:"toy_type,omitempty"`
}

func (x *UpdateToy) Reset() {
	*x = UpdateToy{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateToy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateToy) ProtoMessage() {}

func (x *UpdateToy) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateToy.ProtoReflect.Descriptor instead.
func (*UpdateToy) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateToy) GetAgeGroup() string {
	if x != nil && x.AgeGroup != nil {
		return *x.AgeGroup
	}
	return ""
}

func (x *UpdateToy) GetToyType() string {
	if x != nil && x.ToyType != nil {
		return *x.ToyType
	}
	return ""
}

type Food struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FoodType    string   `protobuf:"bytes,1,opt,name=food_type,json=foodType,proto3" json:"food_type,omitempty"`
	Ingredients []string `protobuf:"bytes,2,rep,name=ingredients,proto3" json:"ingredients,omitempty"`
}

func (x *Food) Reset() {
	*x = Food{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Food) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Food) ProtoMessage() {}

func (x *Food) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Food.ProtoReflect.Descriptor instead.
func (*Food) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{8}
}

func (x *Food) GetFoodType() string {
	if x != nil {
		return x.FoodType
	}
	return ""
}

func (x *Food) GetIngredients() []string {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

type UpdateFood struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FoodType    *string  `protobuf:"bytes,2,opt,name=food_type,json=foodType,proto3,oneof" json:"food_type,omitempty"`
	Ingredients []string `protobuf:"bytes,3,rep,name=ingredients,proto3" json:"ingredients,omitempty"`
}

func (x *UpdateFood) Reset() {
	*x = UpdateFood{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFood) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFood) ProtoMessage() {}

func (x *UpdateFood) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFood.ProtoReflect.Descriptor instead.
func (*UpdateFood) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateFood) GetFoodType() string {
	if x != nil && x.FoodType != nil {
		return *x.FoodType
	}
	return ""
}

func (x *UpdateFood) GetIngredients() []string {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

type Electronics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TechnicalSpecifications []string `protobuf:"bytes,1,rep,name=technical_specifications,json=technicalSpecifications,proto3" json:"technical_specifications,omitempty"`
	Model                   string   `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	Color                   *string  `protobuf:"bytes,3,opt,name=color,proto3,oneof" json:"color,omitempty"`
}

func (x *Electronics) Reset() {
	*x = Electronics{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Electronics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Electronics) ProtoMessage() {}

func (x *Electronics) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Electronics.ProtoReflect.Descriptor instead.
func (*Electronics) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{10}
}

func (x *Electronics) GetTechnicalSpecifications() []string {
	if x != nil {
		return x.TechnicalSpecifications
	}
	return nil
}

func (x *Electronics) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Electronics) GetColor() string {
	if x != nil && x.Color != nil {
		return *x.Color
	}
	return ""
}

type UpdateElectronics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TechnicalSpecifications []string `protobuf:"bytes,1,rep,name=technical_specifications,json=technicalSpecifications,proto3" json:"technical_specifications,omitempty"`
	Color                   *string  `protobuf:"bytes,2,opt,name=color,proto3,oneof" json:"color,omitempty"`
	Model                   *string  `protobuf:"bytes,3,opt,name=model,proto3,oneof" json:"model,omitempty"`
}

func (x *UpdateElectronics) Reset() {
	*x = UpdateElectronics{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateElectronics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateElectronics) ProtoMessage() {}

func (x *UpdateElectronics) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateElectronics.ProtoReflect.Descriptor instead.
func (*UpdateElectronics) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateElectronics) GetTechnicalSpecifications() []string {
	if x != nil {
		return x.TechnicalSpecifications
	}
	return nil
}

func (x *UpdateElectronics) GetColor() string {
	if x != nil && x.Color != nil {
		return *x.Color
	}
	return ""
}

func (x *UpdateElectronics) GetModel() string {
	if x != nil && x.Model != nil {
		return *x.Model
	}
	return ""
}

type Book struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Isbn        string                 `protobuf:"bytes,1,opt,name=isbn,proto3" json:"isbn,omitempty"`
	Author      string                 `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	Publisher   string                 `protobuf:"bytes,3,opt,name=publisher,proto3" json:"publisher,omitempty"`
	Genres      []string               `protobuf:"bytes,4,rep,name=genres,proto3" json:"genres,omitempty"`
	PublishedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=published_at,json=publishedAt,proto3" json:"published_at,omitempty"`
	Pages       int32                  `protobuf:"varint,6,opt,name=pages,proto3" json:"pages,omitempty"`
	Language    string                 `protobuf:"bytes,7,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *Book) Reset() {
	*x = Book{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Book) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Book) ProtoMessage() {}

func (x *Book) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Book.ProtoReflect.Descriptor instead.
func (*Book) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{12}
}

func (x *Book) GetIsbn() string {
	if x != nil {
		return x.Isbn
	}
	return ""
}

func (x *Book) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *Book) GetPublisher() string {
	if x != nil {
		return x.Publisher
	}
	return ""
}

func (x *Book) GetGenres() []string {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *Book) GetPublishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PublishedAt
	}
	return nil
}

func (x *Book) GetPages() int32 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *Book) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type UpdateBook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Isbn        *string                `protobuf:"bytes,1,opt,name=isbn,proto3,oneof" json:"isbn,omitempty"`
	Author      *string                `protobuf:"bytes,2,opt,name=author,proto3,oneof" json:"author,omitempty"`
	Publisher   *string                `protobuf:"bytes,3,opt,name=publisher,proto3,oneof" json:"publisher,omitempty"`
	Genres      []string               `protobuf:"bytes,4,rep,name=genres,proto3" json:"genres,omitempty"`
	PublishedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=published_at,json=publishedAt,proto3,oneof" json:"published_at,omitempty"`
	Pages       *int32                 `protobuf:"varint,6,opt,name=pages,proto3,oneof" json:"pages,omitempty"`
	Language    *string                `protobuf:"bytes,7,opt,name=language,proto3,oneof" json:"language,omitempty"`
}

func (x *UpdateBook) Reset() {
	*x = UpdateBook{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBook) ProtoMessage() {}

func (x *UpdateBook) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBook.ProtoReflect.Descriptor instead.
func (*UpdateBook) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateBook) GetIsbn() string {
	if x != nil && x.Isbn != nil {
		return *x.Isbn
	}
	return ""
}

func (x *UpdateBook) GetAuthor() string {
	if x != nil && x.Author != nil {
		return *x.Author
	}
	return ""
}

func (x *UpdateBook) GetPublisher() string {
	if x != nil && x.Publisher != nil {
		return *x.Publisher
	}
	return ""
}

func (x *UpdateBook) GetGenres() []string {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *UpdateBook) GetPublishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PublishedAt
	}
	return nil
}

func (x *UpdateBook) GetPages() int32 {
	if x != nil && x.Pages != nil {
		return *x.Pages
	}
	return 0
}

func (x *UpdateBook) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

type Clothing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size     string  `protobuf:"bytes,1,opt,name=size,proto3" json:"size,omitempty"`
	Color    string  `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`
	Material string  `protobuf:"bytes,3,opt,name=material,proto3" json:"material,omitempty"`
	Gender   *string `protobuf:"bytes,4,opt,name=gender,proto3,oneof" json:"gender,omitempty"`
	Season   *string `protobuf:"bytes,5,opt,name=season,proto3,oneof" json:"season,omitempty"`
}

func (x *Clothing) Reset() {
	*x = Clothing{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Clothing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Clothing) ProtoMessage() {}

func (x *Clothing) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Clothing.ProtoReflect.Descriptor instead.
func (*Clothing) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{14}
}

func (x *Clothing) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *Clothing) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *Clothing) GetMaterial() string {
	if x != nil {
		return x.Material
	}
	return ""
}

func (x *Clothing) GetGender() string {
	if x != nil && x.Gender != nil {
		return *x.Gender
	}
	return ""
}

func (x *Clothing) GetSeason() string {
	if x != nil && x.Season != nil {
		return *x.Season
	}
	return ""
}

type UpdateClothing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size     *string `protobuf:"bytes,1,opt,name=size,proto3,oneof" json:"size,omitempty"`
	Color    *string `protobuf:"bytes,2,opt,name=color,proto3,oneof" json:"color,omitempty"`
	Material *string `protobuf:"bytes,3,opt,name=material,proto3,oneof" json:"material,omitempty"`
	Gender   *string `protobuf:"bytes,4,opt,name=gender,proto3,oneof" json:"gender,omitempty"`
	Season   *string `protobuf:"bytes,5,opt,name=season,proto3,oneof" json:"season,omitempty"`
}

func (x *UpdateClothing) Reset() {
	*x = UpdateClothing{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateClothing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClothing) ProtoMessage() {}

func (x *UpdateClothing) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClothing.ProtoReflect.Descriptor instead.
func (*UpdateClothing) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateClothing) GetSize() string {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return ""
}

func (x *UpdateClothing) GetColor() string {
	if x != nil && x.Color != nil {
		return *x.Color
	}
	return ""
}

func (x *UpdateClothing) GetMaterial() string {
	if x != nil && x.Material != nil {
		return *x.Material
	}
	return ""
}

func (x *UpdateClothing) GetGender() string {
	if x != nil && x.Gender != nil {
		return *x.Gender
	}
	return ""
}

func (x *UpdateClothing) GetSeason() string {
	if x != nil && x.Season != nil {
		return *x.Season
	}
	return ""
}

type Product struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description        string       `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Brand              string       `protobuf:"bytes,4,opt,name=brand,proto3" json:"brand,omitempty"`
	Price              float32      `protobuf:"fixed32,5,opt,name=price,proto3" json:"price,omitempty"`
	ProductCategoryIds []string     `protobuf:"bytes,6,rep,name=product_category_ids,json=productCategoryIds,proto3" json:"product_category_ids,omitempty"`
	Barcode            *string      `protobuf:"bytes,7,opt,name=barcode,proto3,oneof" json:"barcode,omitempty"`
	Weight             *float32     `protobuf:"fixed32,8,opt,name=weight,proto3,oneof" json:"weight,omitempty"`
	Height             *float32     `protobuf:"fixed32,9,opt,name=height,proto3,oneof" json:"height,omitempty"`
	Width              *float32     `protobuf:"fixed32,10,opt,name=width,proto3,oneof" json:"width,omitempty"`
	Length             *float32     `protobuf:"fixed32,11,opt,name=length,proto3,oneof" json:"length,omitempty"`
	Toy                *Toy         `protobuf:"bytes,12,opt,name=toy,proto3,oneof" json:"toy,omitempty"`
	Food               *Food        `protobuf:"bytes,13,opt,name=food,proto3,oneof" json:"food,omitempty"`
	Electronics        *Electronics `protobuf:"bytes,14,opt,name=electronics,proto3,oneof" json:"electronics,omitempty"`
	Book               *Book        `protobuf:"bytes,15,opt,name=book,proto3,oneof" json:"book,omitempty"`
	Clothing           *Clothing    `protobuf:"bytes,16,opt,name=clothing,proto3,oneof" json:"clothing,omitempty"`
}

func (x *Product) Reset() {
	*x = Product{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product.ProtoReflect.Descriptor instead.
func (*Product) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{16}
}

func (x *Product) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Product) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Product) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *Product) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Product) GetProductCategoryIds() []string {
	if x != nil {
		return x.ProductCategoryIds
	}
	return nil
}

func (x *Product) GetBarcode() string {
	if x != nil && x.Barcode != nil {
		return *x.Barcode
	}
	return ""
}

func (x *Product) GetWeight() float32 {
	if x != nil && x.Weight != nil {
		return *x.Weight
	}
	return 0
}

func (x *Product) GetHeight() float32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *Product) GetWidth() float32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *Product) GetLength() float32 {
	if x != nil && x.Length != nil {
		return *x.Length
	}
	return 0
}

func (x *Product) GetToy() *Toy {
	if x != nil {
		return x.Toy
	}
	return nil
}

func (x *Product) GetFood() *Food {
	if x != nil {
		return x.Food
	}
	return nil
}

func (x *Product) GetElectronics() *Electronics {
	if x != nil {
		return x.Electronics
	}
	return nil
}

func (x *Product) GetBook() *Book {
	if x != nil {
		return x.Book
	}
	return nil
}

func (x *Product) GetClothing() *Clothing {
	if x != nil {
		return x.Clothing
	}
	return nil
}

type ProductWithId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId          string       `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Name               string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description        string       `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Brand              string       `protobuf:"bytes,4,opt,name=brand,proto3" json:"brand,omitempty"`
	Price              float32      `protobuf:"fixed32,5,opt,name=price,proto3" json:"price,omitempty"`
	ProductCategoryIds []string     `protobuf:"bytes,6,rep,name=product_category_ids,json=productCategoryIds,proto3" json:"product_category_ids,omitempty"`
	Barcode            *string      `protobuf:"bytes,7,opt,name=barcode,proto3,oneof" json:"barcode,omitempty"`
	Weight             *float32     `protobuf:"fixed32,8,opt,name=weight,proto3,oneof" json:"weight,omitempty"`
	Height             *float32     `protobuf:"fixed32,9,opt,name=height,proto3,oneof" json:"height,omitempty"`
	Width              *float32     `protobuf:"fixed32,10,opt,name=width,proto3,oneof" json:"width,omitempty"`
	Length             *float32     `protobuf:"fixed32,11,opt,name=length,proto3,oneof" json:"length,omitempty"`
	Toy                *Toy         `protobuf:"bytes,12,opt,name=toy,proto3,oneof" json:"toy,omitempty"`
	Food               *Food        `protobuf:"bytes,13,opt,name=food,proto3,oneof" json:"food,omitempty"`
	Electronics        *Electronics `protobuf:"bytes,14,opt,name=electronics,proto3,oneof" json:"electronics,omitempty"`
	Book               *Book        `protobuf:"bytes,15,opt,name=book,proto3,oneof" json:"book,omitempty"`
	Clothing           *Clothing    `protobuf:"bytes,16,opt,name=clothing,proto3,oneof" json:"clothing,omitempty"`
}

func (x *ProductWithId) Reset() {
	*x = ProductWithId{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductWithId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductWithId) ProtoMessage() {}

func (x *ProductWithId) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductWithId.ProtoReflect.Descriptor instead.
func (*ProductWithId) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{17}
}

func (x *ProductWithId) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *ProductWithId) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductWithId) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProductWithId) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *ProductWithId) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ProductWithId) GetProductCategoryIds() []string {
	if x != nil {
		return x.ProductCategoryIds
	}
	return nil
}

func (x *ProductWithId) GetBarcode() string {
	if x != nil && x.Barcode != nil {
		return *x.Barcode
	}
	return ""
}

func (x *ProductWithId) GetWeight() float32 {
	if x != nil && x.Weight != nil {
		return *x.Weight
	}
	return 0
}

func (x *ProductWithId) GetHeight() float32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *ProductWithId) GetWidth() float32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *ProductWithId) GetLength() float32 {
	if x != nil && x.Length != nil {
		return *x.Length
	}
	return 0
}

func (x *ProductWithId) GetToy() *Toy {
	if x != nil {
		return x.Toy
	}
	return nil
}

func (x *ProductWithId) GetFood() *Food {
	if x != nil {
		return x.Food
	}
	return nil
}

func (x *ProductWithId) GetElectronics() *Electronics {
	if x != nil {
		return x.Electronics
	}
	return nil
}

func (x *ProductWithId) GetBook() *Book {
	if x != nil {
		return x.Book
	}
	return nil
}

func (x *ProductWithId) GetClothing() *Clothing {
	if x != nil {
		return x.Clothing
	}
	return nil
}

type UpdateProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               *string            `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Description        *string            `protobuf:"bytes,2,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Brand              *string            `protobuf:"bytes,3,opt,name=brand,proto3,oneof" json:"brand,omitempty"`
	Price              *float32           `protobuf:"fixed32,4,opt,name=price,proto3,oneof" json:"price,omitempty"`
	ProductCategoryIds []string           `protobuf:"bytes,5,rep,name=product_category_ids,json=productCategoryIds,proto3" json:"product_category_ids,omitempty"`
	Barcode            *string            `protobuf:"bytes,6,opt,name=barcode,proto3,oneof" json:"barcode,omitempty"`
	Weight             *float32           `protobuf:"fixed32,7,opt,name=weight,proto3,oneof" json:"weight,omitempty"`
	Height             *float32           `protobuf:"fixed32,8,opt,name=height,proto3,oneof" json:"height,omitempty"`
	Width              *float32           `protobuf:"fixed32,9,opt,name=width,proto3,oneof" json:"width,omitempty"`
	Length             *float32           `protobuf:"fixed32,10,opt,name=length,proto3,oneof" json:"length,omitempty"`
	Toy                *UpdateToy         `protobuf:"bytes,11,opt,name=toy,proto3,oneof" json:"toy,omitempty"`
	Food               *UpdateFood        `protobuf:"bytes,12,opt,name=food,proto3,oneof" json:"food,omitempty"`
	Electronics        *UpdateElectronics `protobuf:"bytes,13,opt,name=electronics,proto3,oneof" json:"electronics,omitempty"`
	Book               *UpdateBook        `protobuf:"bytes,14,opt,name=book,proto3,oneof" json:"book,omitempty"`
	Clothing           *UpdateClothing    `protobuf:"bytes,15,opt,name=clothing,proto3,oneof" json:"clothing,omitempty"`
}

func (x *UpdateProduct) Reset() {
	*x = UpdateProduct{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProduct) ProtoMessage() {}

func (x *UpdateProduct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProduct.ProtoReflect.Descriptor instead.
func (*UpdateProduct) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateProduct) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateProduct) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *UpdateProduct) GetBrand() string {
	if x != nil && x.Brand != nil {
		return *x.Brand
	}
	return ""
}

func (x *UpdateProduct) GetPrice() float32 {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return 0
}

func (x *UpdateProduct) GetProductCategoryIds() []string {
	if x != nil {
		return x.ProductCategoryIds
	}
	return nil
}

func (x *UpdateProduct) GetBarcode() string {
	if x != nil && x.Barcode != nil {
		return *x.Barcode
	}
	return ""
}

func (x *UpdateProduct) GetWeight() float32 {
	if x != nil && x.Weight != nil {
		return *x.Weight
	}
	return 0
}

func (x *UpdateProduct) GetHeight() float32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *UpdateProduct) GetWidth() float32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *UpdateProduct) GetLength() float32 {
	if x != nil && x.Length != nil {
		return *x.Length
	}
	return 0
}

func (x *UpdateProduct) GetToy() *UpdateToy {
	if x != nil {
		return x.Toy
	}
	return nil
}

func (x *UpdateProduct) GetFood() *UpdateFood {
	if x != nil {
		return x.Food
	}
	return nil
}

func (x *UpdateProduct) GetElectronics() *UpdateElectronics {
	if x != nil {
		return x.Electronics
	}
	return nil
}

func (x *UpdateProduct) GetBook() *UpdateBook {
	if x != nil {
		return x.Book
	}
	return nil
}

func (x *UpdateProduct) GetClothing() *UpdateClothing {
	if x != nil {
		return x.Clothing
	}
	return nil
}

type BusinessProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId         string   `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	ImagesId          []string `protobuf:"bytes,2,rep,name=images_id,json=imagesId,proto3" json:"images_id,omitempty"`
	AdditionalDetails []string `protobuf:"bytes,3,rep,name=additional_details,json=additionalDetails,proto3" json:"additional_details,omitempty"`
}

func (x *BusinessProduct) Reset() {
	*x = BusinessProduct{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BusinessProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessProduct) ProtoMessage() {}

func (x *BusinessProduct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessProduct.ProtoReflect.Descriptor instead.
func (*BusinessProduct) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{19}
}

func (x *BusinessProduct) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *BusinessProduct) GetImagesId() []string {
	if x != nil {
		return x.ImagesId
	}
	return nil
}

func (x *BusinessProduct) GetAdditionalDetails() []string {
	if x != nil {
		return x.AdditionalDetails
	}
	return nil
}

type BranchProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product            *Product `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	ImagesId           []string `protobuf:"bytes,2,rep,name=images_id,json=imagesId,proto3" json:"images_id,omitempty"`
	AdditionalDetails  []string `protobuf:"bytes,3,rep,name=additional_details,json=additionalDetails,proto3" json:"additional_details,omitempty"`
	Stock              int32    `protobuf:"varint,4,opt,name=stock,proto3" json:"stock,omitempty"`
	Price              float32  `protobuf:"fixed32,5,opt,name=price,proto3" json:"price,omitempty"`
	DiscountPercentage float32  `protobuf:"fixed32,6,opt,name=discount_percentage,json=discountPercentage,proto3" json:"discount_percentage,omitempty"`
}

func (x *BranchProduct) Reset() {
	*x = BranchProduct{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BranchProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BranchProduct) ProtoMessage() {}

func (x *BranchProduct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BranchProduct.ProtoReflect.Descriptor instead.
func (*BranchProduct) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{20}
}

func (x *BranchProduct) GetProduct() *Product {
	if x != nil {
		return x.Product
	}
	return nil
}

func (x *BranchProduct) GetImagesId() []string {
	if x != nil {
		return x.ImagesId
	}
	return nil
}

func (x *BranchProduct) GetAdditionalDetails() []string {
	if x != nil {
		return x.AdditionalDetails
	}
	return nil
}

func (x *BranchProduct) GetStock() int32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *BranchProduct) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *BranchProduct) GetDiscountPercentage() float32 {
	if x != nil {
		return x.DiscountPercentage
	}
	return 0
}

type SearchProductResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId   string `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Brand       string `protobuf:"bytes,4,opt,name=brand,proto3" json:"brand,omitempty"`
}

func (x *SearchProductResult) Reset() {
	*x = SearchProductResult{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchProductResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchProductResult) ProtoMessage() {}

func (x *SearchProductResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchProductResult.ProtoReflect.Descriptor instead.
func (*SearchProductResult) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{21}
}

func (x *SearchProductResult) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *SearchProductResult) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchProductResult) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SearchProductResult) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

type SearchBusinessProductResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId         string   `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Name              string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description       string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Brand             string   `protobuf:"bytes,4,opt,name=brand,proto3" json:"brand,omitempty"`
	ImagesId          []string `protobuf:"bytes,5,rep,name=images_id,json=imagesId,proto3" json:"images_id,omitempty"`
	AdditionalDetails []string `protobuf:"bytes,6,rep,name=additional_details,json=additionalDetails,proto3" json:"additional_details,omitempty"`
}

func (x *SearchBusinessProductResult) Reset() {
	*x = SearchBusinessProductResult{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchBusinessProductResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchBusinessProductResult) ProtoMessage() {}

func (x *SearchBusinessProductResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchBusinessProductResult.ProtoReflect.Descriptor instead.
func (*SearchBusinessProductResult) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{22}
}

func (x *SearchBusinessProductResult) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *SearchBusinessProductResult) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchBusinessProductResult) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SearchBusinessProductResult) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *SearchBusinessProductResult) GetImagesId() []string {
	if x != nil {
		return x.ImagesId
	}
	return nil
}

func (x *SearchBusinessProductResult) GetAdditionalDetails() []string {
	if x != nil {
		return x.AdditionalDetails
	}
	return nil
}

type SearchBranchProductResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId          string   `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Name               string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description        string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Brand              string   `protobuf:"bytes,4,opt,name=brand,proto3" json:"brand,omitempty"`
	ImagesId           []string `protobuf:"bytes,5,rep,name=images_id,json=imagesId,proto3" json:"images_id,omitempty"`
	AdditionalDetails  []string `protobuf:"bytes,6,rep,name=additional_details,json=additionalDetails,proto3" json:"additional_details,omitempty"`
	Stock              int32    `protobuf:"varint,7,opt,name=stock,proto3" json:"stock,omitempty"`
	Price              float32  `protobuf:"fixed32,8,opt,name=price,proto3" json:"price,omitempty"`
	DiscountPercentage float32  `protobuf:"fixed32,9,opt,name=discount_percentage,json=discountPercentage,proto3" json:"discount_percentage,omitempty"`
}

func (x *SearchBranchProductResult) Reset() {
	*x = SearchBranchProductResult{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchBranchProductResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchBranchProductResult) ProtoMessage() {}

func (x *SearchBranchProductResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchBranchProductResult.ProtoReflect.Descriptor instead.
func (*SearchBranchProductResult) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{23}
}

func (x *SearchBranchProductResult) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *SearchBranchProductResult) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchBranchProductResult) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SearchBranchProductResult) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *SearchBranchProductResult) GetImagesId() []string {
	if x != nil {
		return x.ImagesId
	}
	return nil
}

func (x *SearchBranchProductResult) GetAdditionalDetails() []string {
	if x != nil {
		return x.AdditionalDetails
	}
	return nil
}

func (x *SearchBranchProductResult) GetStock() int32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *SearchBranchProductResult) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SearchBranchProductResult) GetDiscountPercentage() float32 {
	if x != nil {
		return x.DiscountPercentage
	}
	return 0
}

type AddBusinessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *AddBusinessRequest) Reset() {
	*x = AddBusinessRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBusinessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBusinessRequest) ProtoMessage() {}

func (x *AddBusinessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBusinessRequest.ProtoReflect.Descriptor instead.
func (*AddBusinessRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{24}
}

func (x *AddBusinessRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddBusinessRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type AddBusinessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddBusinessResponse) Reset() {
	*x = AddBusinessResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBusinessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBusinessResponse) ProtoMessage() {}

func (x *AddBusinessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBusinessResponse.ProtoReflect.Descriptor instead.
func (*AddBusinessResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{25}
}

func (x *AddBusinessResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetBusinessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId string `protobuf:"bytes,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
}

func (x *GetBusinessRequest) Reset() {
	*x = GetBusinessRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBusinessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessRequest) ProtoMessage() {}

func (x *GetBusinessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessRequest.ProtoReflect.Descriptor instead.
func (*GetBusinessRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{26}
}

func (x *GetBusinessRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

type GetBusinessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message     string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	JoinedAt    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=joined_at,json=joinedAt,proto3" json:"joined_at,omitempty"`
}

func (x *GetBusinessResponse) Reset() {
	*x = GetBusinessResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBusinessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessResponse) ProtoMessage() {}

func (x *GetBusinessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessResponse.ProtoReflect.Descriptor instead.
func (*GetBusinessResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{27}
}

func (x *GetBusinessResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetBusinessResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetBusinessResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetBusinessResponse) GetJoinedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.JoinedAt
	}
	return nil
}

type UpdateBusinessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        *string `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Description *string `protobuf:"bytes,2,opt,name=description,proto3,oneof" json:"description,omitempty"`
}

func (x *UpdateBusinessRequest) Reset() {
	*x = UpdateBusinessRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBusinessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBusinessRequest) ProtoMessage() {}

func (x *UpdateBusinessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBusinessRequest.ProtoReflect.Descriptor instead.
func (*UpdateBusinessRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateBusinessRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateBusinessRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type UpdateBusinessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateBusinessResponse) Reset() {
	*x = UpdateBusinessResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBusinessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBusinessResponse) ProtoMessage() {}

func (x *UpdateBusinessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBusinessResponse.ProtoReflect.Descriptor instead.
func (*UpdateBusinessResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateBusinessResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SetBusinessProfilePictureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId string `protobuf:"bytes,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	ImageId    string `protobuf:"bytes,2,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
}

func (x *SetBusinessProfilePictureRequest) Reset() {
	*x = SetBusinessProfilePictureRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetBusinessProfilePictureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBusinessProfilePictureRequest) ProtoMessage() {}

func (x *SetBusinessProfilePictureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBusinessProfilePictureRequest.ProtoReflect.Descriptor instead.
func (*SetBusinessProfilePictureRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{30}
}

func (x *SetBusinessProfilePictureRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

func (x *SetBusinessProfilePictureRequest) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

type SetBusinessProfilePictureResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SetBusinessProfilePictureResponse) Reset() {
	*x = SetBusinessProfilePictureResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetBusinessProfilePictureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBusinessProfilePictureResponse) ProtoMessage() {}

func (x *SetBusinessProfilePictureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBusinessProfilePictureResponse.ProtoReflect.Descriptor instead.
func (*SetBusinessProfilePictureResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{31}
}

func (x *SetBusinessProfilePictureResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SuspendBusinessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId string `protobuf:"bytes,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
}

func (x *SuspendBusinessRequest) Reset() {
	*x = SuspendBusinessRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuspendBusinessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuspendBusinessRequest) ProtoMessage() {}

func (x *SuspendBusinessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuspendBusinessRequest.ProtoReflect.Descriptor instead.
func (*SuspendBusinessRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{32}
}

func (x *SuspendBusinessRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

type SuspendBusinessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SuspendBusinessResponse) Reset() {
	*x = SuspendBusinessResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuspendBusinessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuspendBusinessResponse) ProtoMessage() {}

func (x *SuspendBusinessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuspendBusinessResponse.ProtoReflect.Descriptor instead.
func (*SuspendBusinessResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{33}
}

func (x *SuspendBusinessResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ActivateBusinessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId string `protobuf:"bytes,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
}

func (x *ActivateBusinessRequest) Reset() {
	*x = ActivateBusinessRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivateBusinessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateBusinessRequest) ProtoMessage() {}

func (x *ActivateBusinessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateBusinessRequest.ProtoReflect.Descriptor instead.
func (*ActivateBusinessRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{34}
}

func (x *ActivateBusinessRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

type ActivateBusinessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ActivateBusinessResponse) Reset() {
	*x = ActivateBusinessResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivateBusinessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateBusinessResponse) ProtoMessage() {}

func (x *ActivateBusinessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateBusinessResponse.ProtoReflect.Descriptor instead.
func (*ActivateBusinessResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{35}
}

func (x *ActivateBusinessResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteBusinessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId string `protobuf:"bytes,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
}

func (x *DeleteBusinessRequest) Reset() {
	*x = DeleteBusinessRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBusinessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBusinessRequest) ProtoMessage() {}

func (x *DeleteBusinessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBusinessRequest.ProtoReflect.Descriptor instead.
func (*DeleteBusinessRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{36}
}

func (x *DeleteBusinessRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

type DeleteBusinessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteBusinessResponse) Reset() {
	*x = DeleteBusinessResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBusinessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBusinessResponse) ProtoMessage() {}

func (x *DeleteBusinessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBusinessResponse.ProtoReflect.Descriptor instead.
func (*DeleteBusinessResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{37}
}

func (x *DeleteBusinessResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AddBusinessOwnerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId string `protobuf:"bytes,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *AddBusinessOwnerRequest) Reset() {
	*x = AddBusinessOwnerRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBusinessOwnerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBusinessOwnerRequest) ProtoMessage() {}

func (x *AddBusinessOwnerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBusinessOwnerRequest.ProtoReflect.Descriptor instead.
func (*AddBusinessOwnerRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{38}
}

func (x *AddBusinessOwnerRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

func (x *AddBusinessOwnerRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type AddBusinessOwnerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddBusinessOwnerResponse) Reset() {
	*x = AddBusinessOwnerResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBusinessOwnerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBusinessOwnerResponse) ProtoMessage() {}

func (x *AddBusinessOwnerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBusinessOwnerResponse.ProtoReflect.Descriptor instead.
func (*AddBusinessOwnerResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{39}
}

func (x *AddBusinessOwnerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RemoveBusinessOwnerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId string `protobuf:"bytes,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *RemoveBusinessOwnerRequest) Reset() {
	*x = RemoveBusinessOwnerRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveBusinessOwnerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBusinessOwnerRequest) ProtoMessage() {}

func (x *RemoveBusinessOwnerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBusinessOwnerRequest.ProtoReflect.Descriptor instead.
func (*RemoveBusinessOwnerRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{40}
}

func (x *RemoveBusinessOwnerRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

func (x *RemoveBusinessOwnerRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type RemoveBusinessOwnerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RemoveBusinessOwnerResponse) Reset() {
	*x = RemoveBusinessOwnerResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveBusinessOwnerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBusinessOwnerResponse) ProtoMessage() {}

func (x *RemoveBusinessOwnerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBusinessOwnerResponse.ProtoReflect.Descriptor instead.
func (*RemoveBusinessOwnerResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{41}
}

func (x *RemoveBusinessOwnerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetBusinessOwnersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId string `protobuf:"bytes,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
}

func (x *GetBusinessOwnersRequest) Reset() {
	*x = GetBusinessOwnersRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBusinessOwnersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessOwnersRequest) ProtoMessage() {}

func (x *GetBusinessOwnersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessOwnersRequest.ProtoReflect.Descriptor instead.
func (*GetBusinessOwnersRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{42}
}

func (x *GetBusinessOwnersRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

type GetBusinessOwnersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	UserIds []string `protobuf:"bytes,2,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
}

func (x *GetBusinessOwnersResponse) Reset() {
	*x = GetBusinessOwnersResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBusinessOwnersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessOwnersResponse) ProtoMessage() {}

func (x *GetBusinessOwnersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessOwnersResponse.ProtoReflect.Descriptor instead.
func (*GetBusinessOwnersResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{43}
}

func (x *GetBusinessOwnersResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetBusinessOwnersResponse) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type AddBusinessClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId string `protobuf:"bytes,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *AddBusinessClientRequest) Reset() {
	*x = AddBusinessClientRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBusinessClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBusinessClientRequest) ProtoMessage() {}

func (x *AddBusinessClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBusinessClientRequest.ProtoReflect.Descriptor instead.
func (*AddBusinessClientRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{44}
}

func (x *AddBusinessClientRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

func (x *AddBusinessClientRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type AddBusinessClientResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddBusinessClientResponse) Reset() {
	*x = AddBusinessClientResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBusinessClientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBusinessClientResponse) ProtoMessage() {}

func (x *AddBusinessClientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBusinessClientResponse.ProtoReflect.Descriptor instead.
func (*AddBusinessClientResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{45}
}

func (x *AddBusinessClientResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type IsBusinessClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId string `protobuf:"bytes,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *IsBusinessClientRequest) Reset() {
	*x = IsBusinessClientRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsBusinessClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsBusinessClientRequest) ProtoMessage() {}

func (x *IsBusinessClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsBusinessClientRequest.ProtoReflect.Descriptor instead.
func (*IsBusinessClientRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{46}
}

func (x *IsBusinessClientRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

func (x *IsBusinessClientRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type IsBusinessClientResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message  string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	IsClient bool   `protobuf:"varint,2,opt,name=is_client,json=isClient,proto3" json:"is_client,omitempty"`
}

func (x *IsBusinessClientResponse) Reset() {
	*x = IsBusinessClientResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsBusinessClientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsBusinessClientResponse) ProtoMessage() {}

func (x *IsBusinessClientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsBusinessClientResponse.ProtoReflect.Descriptor instead.
func (*IsBusinessClientResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{47}
}

func (x *IsBusinessClientResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *IsBusinessClientResponse) GetIsClient() bool {
	if x != nil {
		return x.IsClient
	}
	return false
}

type AddMarketCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarketCategory *MarketCategory `protobuf:"bytes,1,opt,name=market_category,json=marketCategory,proto3" json:"market_category,omitempty"`
}

func (x *AddMarketCategoryRequest) Reset() {
	*x = AddMarketCategoryRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddMarketCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMarketCategoryRequest) ProtoMessage() {}

func (x *AddMarketCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMarketCategoryRequest.ProtoReflect.Descriptor instead.
func (*AddMarketCategoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{48}
}

func (x *AddMarketCategoryRequest) GetMarketCategory() *MarketCategory {
	if x != nil {
		return x.MarketCategory
	}
	return nil
}

type AddMarketCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddMarketCategoryResponse) Reset() {
	*x = AddMarketCategoryResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddMarketCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMarketCategoryResponse) ProtoMessage() {}

func (x *AddMarketCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMarketCategoryResponse.ProtoReflect.Descriptor instead.
func (*AddMarketCategoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{49}
}

func (x *AddMarketCategoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetMarketCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarketCategoryId string `protobuf:"bytes,1,opt,name=market_category_id,json=marketCategoryId,proto3" json:"market_category_id,omitempty"`
}

func (x *GetMarketCategoryRequest) Reset() {
	*x = GetMarketCategoryRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMarketCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketCategoryRequest) ProtoMessage() {}

func (x *GetMarketCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketCategoryRequest.ProtoReflect.Descriptor instead.
func (*GetMarketCategoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{50}
}

func (x *GetMarketCategoryRequest) GetMarketCategoryId() string {
	if x != nil {
		return x.MarketCategoryId
	}
	return ""
}

type GetMarketCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message        string          `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	MarketCategory *MarketCategory `protobuf:"bytes,2,opt,name=market_category,json=marketCategory,proto3" json:"market_category,omitempty"`
}

func (x *GetMarketCategoryResponse) Reset() {
	*x = GetMarketCategoryResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMarketCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketCategoryResponse) ProtoMessage() {}

func (x *GetMarketCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketCategoryResponse.ProtoReflect.Descriptor instead.
func (*GetMarketCategoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{51}
}

func (x *GetMarketCategoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetMarketCategoryResponse) GetMarketCategory() *MarketCategory {
	if x != nil {
		return x.MarketCategory
	}
	return nil
}

type UpdateMarketCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarketCategoryId string  `protobuf:"bytes,1,opt,name=market_category_id,json=marketCategoryId,proto3" json:"market_category_id,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Description      *string `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
}

func (x *UpdateMarketCategoryRequest) Reset() {
	*x = UpdateMarketCategoryRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMarketCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarketCategoryRequest) ProtoMessage() {}

func (x *UpdateMarketCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarketCategoryRequest.ProtoReflect.Descriptor instead.
func (*UpdateMarketCategoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{52}
}

func (x *UpdateMarketCategoryRequest) GetMarketCategoryId() string {
	if x != nil {
		return x.MarketCategoryId
	}
	return ""
}

func (x *UpdateMarketCategoryRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateMarketCategoryRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type UpdateMarketCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateMarketCategoryResponse) Reset() {
	*x = UpdateMarketCategoryResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMarketCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarketCategoryResponse) ProtoMessage() {}

func (x *UpdateMarketCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarketCategoryResponse.ProtoReflect.Descriptor instead.
func (*UpdateMarketCategoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{53}
}

func (x *UpdateMarketCategoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AddBusinessMarketCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId       string `protobuf:"bytes,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	MarketCategoryId string `protobuf:"bytes,2,opt,name=market_category_id,json=marketCategoryId,proto3" json:"market_category_id,omitempty"`
}

func (x *AddBusinessMarketCategoryRequest) Reset() {
	*x = AddBusinessMarketCategoryRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBusinessMarketCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBusinessMarketCategoryRequest) ProtoMessage() {}

func (x *AddBusinessMarketCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBusinessMarketCategoryRequest.ProtoReflect.Descriptor instead.
func (*AddBusinessMarketCategoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{54}
}

func (x *AddBusinessMarketCategoryRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

func (x *AddBusinessMarketCategoryRequest) GetMarketCategoryId() string {
	if x != nil {
		return x.MarketCategoryId
	}
	return ""
}

type AddBusinessMarketCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddBusinessMarketCategoryResponse) Reset() {
	*x = AddBusinessMarketCategoryResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBusinessMarketCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBusinessMarketCategoryResponse) ProtoMessage() {}

func (x *AddBusinessMarketCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBusinessMarketCategoryResponse.ProtoReflect.Descriptor instead.
func (*AddBusinessMarketCategoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{55}
}

func (x *AddBusinessMarketCategoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetBusinessMarketCategoriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId string `protobuf:"bytes,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
}

func (x *GetBusinessMarketCategoriesRequest) Reset() {
	*x = GetBusinessMarketCategoriesRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBusinessMarketCategoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessMarketCategoriesRequest) ProtoMessage() {}

func (x *GetBusinessMarketCategoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessMarketCategoriesRequest.ProtoReflect.Descriptor instead.
func (*GetBusinessMarketCategoriesRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{56}
}

func (x *GetBusinessMarketCategoriesRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

type GetBusinessMarketCategoriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message           string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	MarketCategoryIds []string `protobuf:"bytes,2,rep,name=market_category_ids,json=marketCategoryIds,proto3" json:"market_category_ids,omitempty"`
}

func (x *GetBusinessMarketCategoriesResponse) Reset() {
	*x = GetBusinessMarketCategoriesResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBusinessMarketCategoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessMarketCategoriesResponse) ProtoMessage() {}

func (x *GetBusinessMarketCategoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessMarketCategoriesResponse.ProtoReflect.Descriptor instead.
func (*GetBusinessMarketCategoriesResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{57}
}

func (x *GetBusinessMarketCategoriesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetBusinessMarketCategoriesResponse) GetMarketCategoryIds() []string {
	if x != nil {
		return x.MarketCategoryIds
	}
	return nil
}

type AddStoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Store *Store `protobuf:"bytes,1,opt,name=store,proto3" json:"store,omitempty"`
}

func (x *AddStoreRequest) Reset() {
	*x = AddStoreRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStoreRequest) ProtoMessage() {}

func (x *AddStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStoreRequest.ProtoReflect.Descriptor instead.
func (*AddStoreRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{58}
}

func (x *AddStoreRequest) GetStore() *Store {
	if x != nil {
		return x.Store
	}
	return nil
}

type AddStoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddStoreResponse) Reset() {
	*x = AddStoreResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddStoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStoreResponse) ProtoMessage() {}

func (x *AddStoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStoreResponse.ProtoReflect.Descriptor instead.
func (*AddStoreResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{59}
}

func (x *AddStoreResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetStoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreId string `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
}

func (x *GetStoreRequest) Reset() {
	*x = GetStoreRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoreRequest) ProtoMessage() {}

func (x *GetStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoreRequest.ProtoReflect.Descriptor instead.
func (*GetStoreRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{60}
}

func (x *GetStoreRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

type GetStoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Store   *Store `protobuf:"bytes,2,opt,name=store,proto3" json:"store,omitempty"`
}

func (x *GetStoreResponse) Reset() {
	*x = GetStoreResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoreResponse) ProtoMessage() {}

func (x *GetStoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoreResponse.ProtoReflect.Descriptor instead.
func (*GetStoreResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{61}
}

func (x *GetStoreResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetStoreResponse) GetStore() *Store {
	if x != nil {
		return x.Store
	}
	return nil
}

type DeleteStoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreId string `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
}

func (x *DeleteStoreRequest) Reset() {
	*x = DeleteStoreRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStoreRequest) ProtoMessage() {}

func (x *DeleteStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStoreRequest.ProtoReflect.Descriptor instead.
func (*DeleteStoreRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{62}
}

func (x *DeleteStoreRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

type DeleteStoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteStoreResponse) Reset() {
	*x = DeleteStoreResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteStoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStoreResponse) ProtoMessage() {}

func (x *DeleteStoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStoreResponse.ProtoReflect.Descriptor instead.
func (*DeleteStoreResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{63}
}

func (x *DeleteStoreResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetUnoccupiedStoresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId string `protobuf:"bytes,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
}

func (x *GetUnoccupiedStoresRequest) Reset() {
	*x = GetUnoccupiedStoresRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUnoccupiedStoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnoccupiedStoresRequest) ProtoMessage() {}

func (x *GetUnoccupiedStoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnoccupiedStoresRequest.ProtoReflect.Descriptor instead.
func (*GetUnoccupiedStoresRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{64}
}

func (x *GetUnoccupiedStoresRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

type GetUnoccupiedStoresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Stores  []*Store `protobuf:"bytes,2,rep,name=stores,proto3" json:"stores,omitempty"`
}

func (x *GetUnoccupiedStoresResponse) Reset() {
	*x = GetUnoccupiedStoresResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUnoccupiedStoresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnoccupiedStoresResponse) ProtoMessage() {}

func (x *GetUnoccupiedStoresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnoccupiedStoresResponse.ProtoReflect.Descriptor instead.
func (*GetUnoccupiedStoresResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{65}
}

func (x *GetUnoccupiedStoresResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetUnoccupiedStoresResponse) GetStores() []*Store {
	if x != nil {
		return x.Stores
	}
	return nil
}

type AddBranchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreId     string `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *AddBranchRequest) Reset() {
	*x = AddBranchRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBranchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBranchRequest) ProtoMessage() {}

func (x *AddBranchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBranchRequest.ProtoReflect.Descriptor instead.
func (*AddBranchRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{66}
}

func (x *AddBranchRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *AddBranchRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddBranchRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type AddBranchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddBranchResponse) Reset() {
	*x = AddBranchResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBranchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBranchResponse) ProtoMessage() {}

func (x *AddBranchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBranchResponse.ProtoReflect.Descriptor instead.
func (*AddBranchResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{67}
}

func (x *AddBranchResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetBranchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId string `protobuf:"bytes,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
}

func (x *GetBranchRequest) Reset() {
	*x = GetBranchRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBranchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBranchRequest) ProtoMessage() {}

func (x *GetBranchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBranchRequest.ProtoReflect.Descriptor instead.
func (*GetBranchRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{68}
}

func (x *GetBranchRequest) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

type GetBranchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message     string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	JoinedAt    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=joined_at,json=joinedAt,proto3" json:"joined_at,omitempty"`
}

func (x *GetBranchResponse) Reset() {
	*x = GetBranchResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBranchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBranchResponse) ProtoMessage() {}

func (x *GetBranchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBranchResponse.ProtoReflect.Descriptor instead.
func (*GetBranchResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{69}
}

func (x *GetBranchResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetBranchResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetBranchResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetBranchResponse) GetJoinedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.JoinedAt
	}
	return nil
}

type UpdateBranchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId    string  `protobuf:"bytes,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	Name        *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Description *string `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
}

func (x *UpdateBranchRequest) Reset() {
	*x = UpdateBranchRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBranchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBranchRequest) ProtoMessage() {}

func (x *UpdateBranchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBranchRequest.ProtoReflect.Descriptor instead.
func (*UpdateBranchRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{70}
}

func (x *UpdateBranchRequest) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *UpdateBranchRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateBranchRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type UpdateBranchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateBranchResponse) Reset() {
	*x = UpdateBranchResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBranchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBranchResponse) ProtoMessage() {}

func (x *UpdateBranchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBranchResponse.ProtoReflect.Descriptor instead.
func (*UpdateBranchResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{71}
}

func (x *UpdateBranchResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SuspendBranchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId string `protobuf:"bytes,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
}

func (x *SuspendBranchRequest) Reset() {
	*x = SuspendBranchRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuspendBranchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuspendBranchRequest) ProtoMessage() {}

func (x *SuspendBranchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuspendBranchRequest.ProtoReflect.Descriptor instead.
func (*SuspendBranchRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{72}
}

func (x *SuspendBranchRequest) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

type SuspendBranchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SuspendBranchResponse) Reset() {
	*x = SuspendBranchResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuspendBranchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuspendBranchResponse) ProtoMessage() {}

func (x *SuspendBranchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuspendBranchResponse.ProtoReflect.Descriptor instead.
func (*SuspendBranchResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{73}
}

func (x *SuspendBranchResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ActivateBranchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId string `protobuf:"bytes,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
}

func (x *ActivateBranchRequest) Reset() {
	*x = ActivateBranchRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivateBranchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateBranchRequest) ProtoMessage() {}

func (x *ActivateBranchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateBranchRequest.ProtoReflect.Descriptor instead.
func (*ActivateBranchRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{74}
}

func (x *ActivateBranchRequest) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

type ActivateBranchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ActivateBranchResponse) Reset() {
	*x = ActivateBranchResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivateBranchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateBranchResponse) ProtoMessage() {}

func (x *ActivateBranchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateBranchResponse.ProtoReflect.Descriptor instead.
func (*ActivateBranchResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{75}
}

func (x *ActivateBranchResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetBusinessBranchesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId string `protobuf:"bytes,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
}

func (x *GetBusinessBranchesRequest) Reset() {
	*x = GetBusinessBranchesRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBusinessBranchesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessBranchesRequest) ProtoMessage() {}

func (x *GetBusinessBranchesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessBranchesRequest.ProtoReflect.Descriptor instead.
func (*GetBusinessBranchesRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{76}
}

func (x *GetBusinessBranchesRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

type GetBusinessBranchesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message   string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	BranchIds []string `protobuf:"bytes,2,rep,name=branch_ids,json=branchIds,proto3" json:"branch_ids,omitempty"`
}

func (x *GetBusinessBranchesResponse) Reset() {
	*x = GetBusinessBranchesResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBusinessBranchesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessBranchesResponse) ProtoMessage() {}

func (x *GetBusinessBranchesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessBranchesResponse.ProtoReflect.Descriptor instead.
func (*GetBusinessBranchesResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{77}
}

func (x *GetBusinessBranchesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetBusinessBranchesResponse) GetBranchIds() []string {
	if x != nil {
		return x.BranchIds
	}
	return nil
}

type DeleteBranchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId string `protobuf:"bytes,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
}

func (x *DeleteBranchRequest) Reset() {
	*x = DeleteBranchRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBranchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBranchRequest) ProtoMessage() {}

func (x *DeleteBranchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBranchRequest.ProtoReflect.Descriptor instead.
func (*DeleteBranchRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{78}
}

func (x *DeleteBranchRequest) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

type DeleteBranchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteBranchResponse) Reset() {
	*x = DeleteBranchResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBranchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBranchResponse) ProtoMessage() {}

func (x *DeleteBranchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBranchResponse.ProtoReflect.Descriptor instead.
func (*DeleteBranchResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{79}
}

func (x *DeleteBranchResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AddBranchRentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId   string         `protobuf:"bytes,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	BranchRent *AddBranchRent `protobuf:"bytes,2,opt,name=branch_rent,json=branchRent,proto3" json:"branch_rent,omitempty"`
}

func (x *AddBranchRentRequest) Reset() {
	*x = AddBranchRentRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBranchRentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBranchRentRequest) ProtoMessage() {}

func (x *AddBranchRentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBranchRentRequest.ProtoReflect.Descriptor instead.
func (*AddBranchRentRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{80}
}

func (x *AddBranchRentRequest) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *AddBranchRentRequest) GetBranchRent() *AddBranchRent {
	if x != nil {
		return x.BranchRent
	}
	return nil
}

type AddBranchRentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddBranchRentResponse) Reset() {
	*x = AddBranchRentResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBranchRentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBranchRentResponse) ProtoMessage() {}

func (x *AddBranchRentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBranchRentResponse.ProtoReflect.Descriptor instead.
func (*AddBranchRentResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{81}
}

func (x *AddBranchRentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetBranchRentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId string                 `protobuf:"bytes,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	From     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=from,proto3,oneof" json:"from,omitempty"`
	To       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=to,proto3,oneof" json:"to,omitempty"`
}

func (x *GetBranchRentsRequest) Reset() {
	*x = GetBranchRentsRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBranchRentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBranchRentsRequest) ProtoMessage() {}

func (x *GetBranchRentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBranchRentsRequest.ProtoReflect.Descriptor instead.
func (*GetBranchRentsRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{82}
}

func (x *GetBranchRentsRequest) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *GetBranchRentsRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *GetBranchRentsRequest) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

type GetBranchRentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message     string           `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	BranchRents []*GetBranchRent `protobuf:"bytes,2,rep,name=branch_rents,json=branchRents,proto3" json:"branch_rents,omitempty"`
}

func (x *GetBranchRentsResponse) Reset() {
	*x = GetBranchRentsResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBranchRentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBranchRentsResponse) ProtoMessage() {}

func (x *GetBranchRentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBranchRentsResponse.ProtoReflect.Descriptor instead.
func (*GetBranchRentsResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{83}
}

func (x *GetBranchRentsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetBranchRentsResponse) GetBranchRents() []*GetBranchRent {
	if x != nil {
		return x.BranchRents
	}
	return nil
}

type UpdateBranchRentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchRentId string                 `protobuf:"bytes,1,opt,name=branch_rent_id,json=branchRentId,proto3" json:"branch_rent_id,omitempty"`
	From         *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=from,proto3,oneof" json:"from,omitempty"`
	To           *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=to,proto3,oneof" json:"to,omitempty"`
	Price        *string                `protobuf:"bytes,4,opt,name=price,proto3,oneof" json:"price,omitempty"`
}

func (x *UpdateBranchRentRequest) Reset() {
	*x = UpdateBranchRentRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBranchRentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBranchRentRequest) ProtoMessage() {}

func (x *UpdateBranchRentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBranchRentRequest.ProtoReflect.Descriptor instead.
func (*UpdateBranchRentRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{84}
}

func (x *UpdateBranchRentRequest) GetBranchRentId() string {
	if x != nil {
		return x.BranchRentId
	}
	return ""
}

func (x *UpdateBranchRentRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *UpdateBranchRentRequest) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *UpdateBranchRentRequest) GetPrice() string {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return ""
}

type UpdateBranchRentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateBranchRentResponse) Reset() {
	*x = UpdateBranchRentResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBranchRentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBranchRentResponse) ProtoMessage() {}

func (x *UpdateBranchRentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBranchRentResponse.ProtoReflect.Descriptor instead.
func (*UpdateBranchRentResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{85}
}

func (x *UpdateBranchRentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetUnpaidBranchRentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId string `protobuf:"bytes,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
}

func (x *GetUnpaidBranchRentsRequest) Reset() {
	*x = GetUnpaidBranchRentsRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUnpaidBranchRentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnpaidBranchRentsRequest) ProtoMessage() {}

func (x *GetUnpaidBranchRentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnpaidBranchRentsRequest.ProtoReflect.Descriptor instead.
func (*GetUnpaidBranchRentsRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{86}
}

func (x *GetUnpaidBranchRentsRequest) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

type GetUnpaidBranchRentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message     string           `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	BranchRents []*GetBranchRent `protobuf:"bytes,2,rep,name=branch_rents,json=branchRents,proto3" json:"branch_rents,omitempty"`
}

func (x *GetUnpaidBranchRentsResponse) Reset() {
	*x = GetUnpaidBranchRentsResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUnpaidBranchRentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnpaidBranchRentsResponse) ProtoMessage() {}

func (x *GetUnpaidBranchRentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnpaidBranchRentsResponse.ProtoReflect.Descriptor instead.
func (*GetUnpaidBranchRentsResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{87}
}

func (x *GetUnpaidBranchRentsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetUnpaidBranchRentsResponse) GetBranchRents() []*GetBranchRent {
	if x != nil {
		return x.BranchRents
	}
	return nil
}

type GetBusinessUnpaidBranchRentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId string `protobuf:"bytes,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
}

func (x *GetBusinessUnpaidBranchRentsRequest) Reset() {
	*x = GetBusinessUnpaidBranchRentsRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBusinessUnpaidBranchRentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessUnpaidBranchRentsRequest) ProtoMessage() {}

func (x *GetBusinessUnpaidBranchRentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessUnpaidBranchRentsRequest.ProtoReflect.Descriptor instead.
func (*GetBusinessUnpaidBranchRentsRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{88}
}

func (x *GetBusinessUnpaidBranchRentsRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

type GetBusinessUnpaidBranchRentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message     string           `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	BranchRents []*GetBranchRent `protobuf:"bytes,2,rep,name=branch_rents,json=branchRents,proto3" json:"branch_rents,omitempty"`
}

func (x *GetBusinessUnpaidBranchRentsResponse) Reset() {
	*x = GetBusinessUnpaidBranchRentsResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBusinessUnpaidBranchRentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessUnpaidBranchRentsResponse) ProtoMessage() {}

func (x *GetBusinessUnpaidBranchRentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessUnpaidBranchRentsResponse.ProtoReflect.Descriptor instead.
func (*GetBusinessUnpaidBranchRentsResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{89}
}

func (x *GetBusinessUnpaidBranchRentsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetBusinessUnpaidBranchRentsResponse) GetBranchRents() []*GetBranchRent {
	if x != nil {
		return x.BranchRents
	}
	return nil
}

type AddProductCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *AddProductCategoryRequest) Reset() {
	*x = AddProductCategoryRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[90]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddProductCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProductCategoryRequest) ProtoMessage() {}

func (x *AddProductCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[90]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProductCategoryRequest.ProtoReflect.Descriptor instead.
func (*AddProductCategoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{90}
}

func (x *AddProductCategoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddProductCategoryRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type AddProductCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddProductCategoryResponse) Reset() {
	*x = AddProductCategoryResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[91]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddProductCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProductCategoryResponse) ProtoMessage() {}

func (x *AddProductCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[91]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProductCategoryResponse.ProtoReflect.Descriptor instead.
func (*AddProductCategoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{91}
}

func (x *AddProductCategoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetProductCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductCategoryId string `protobuf:"bytes,1,opt,name=product_category_id,json=productCategoryId,proto3" json:"product_category_id,omitempty"`
}

func (x *GetProductCategoryRequest) Reset() {
	*x = GetProductCategoryRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[92]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProductCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductCategoryRequest) ProtoMessage() {}

func (x *GetProductCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[92]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductCategoryRequest.ProtoReflect.Descriptor instead.
func (*GetProductCategoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{92}
}

func (x *GetProductCategoryRequest) GetProductCategoryId() string {
	if x != nil {
		return x.ProductCategoryId
	}
	return ""
}

type GetProductCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message         string           `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	ProductCategory *ProductCategory `protobuf:"bytes,2,opt,name=product_category,json=productCategory,proto3" json:"product_category,omitempty"`
}

func (x *GetProductCategoryResponse) Reset() {
	*x = GetProductCategoryResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[93]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProductCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductCategoryResponse) ProtoMessage() {}

func (x *GetProductCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[93]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductCategoryResponse.ProtoReflect.Descriptor instead.
func (*GetProductCategoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{93}
}

func (x *GetProductCategoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetProductCategoryResponse) GetProductCategory() *ProductCategory {
	if x != nil {
		return x.ProductCategory
	}
	return nil
}

type UpdateProductCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductCategoryId string  `protobuf:"bytes,1,opt,name=product_category_id,json=productCategoryId,proto3" json:"product_category_id,omitempty"`
	Name              *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Description       *string `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
}

func (x *UpdateProductCategoryRequest) Reset() {
	*x = UpdateProductCategoryRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[94]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProductCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProductCategoryRequest) ProtoMessage() {}

func (x *UpdateProductCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[94]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProductCategoryRequest.ProtoReflect.Descriptor instead.
func (*UpdateProductCategoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{94}
}

func (x *UpdateProductCategoryRequest) GetProductCategoryId() string {
	if x != nil {
		return x.ProductCategoryId
	}
	return ""
}

func (x *UpdateProductCategoryRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateProductCategoryRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type UpdateProductCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateProductCategoryResponse) Reset() {
	*x = UpdateProductCategoryResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[95]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProductCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProductCategoryResponse) ProtoMessage() {}

func (x *UpdateProductCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[95]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProductCategoryResponse.ProtoReflect.Descriptor instead.
func (*UpdateProductCategoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{95}
}

func (x *UpdateProductCategoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AddProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId string   `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Product   *Product `protobuf:"bytes,2,opt,name=product,proto3" json:"product,omitempty"`
}

func (x *AddProductRequest) Reset() {
	*x = AddProductRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[96]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProductRequest) ProtoMessage() {}

func (x *AddProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[96]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProductRequest.ProtoReflect.Descriptor instead.
func (*AddProductRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{96}
}

func (x *AddProductRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *AddProductRequest) GetProduct() *Product {
	if x != nil {
		return x.Product
	}
	return nil
}

type AddProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddProductResponse) Reset() {
	*x = AddProductResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[97]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProductResponse) ProtoMessage() {}

func (x *AddProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[97]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProductResponse.ProtoReflect.Descriptor instead.
func (*AddProductResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{97}
}

func (x *AddProductResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId string `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *GetProductRequest) Reset() {
	*x = GetProductRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[98]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductRequest) ProtoMessage() {}

func (x *GetProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[98]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductRequest.ProtoReflect.Descriptor instead.
func (*GetProductRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{98}
}

func (x *GetProductRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type GetProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Product *Product `protobuf:"bytes,2,opt,name=product,proto3" json:"product,omitempty"`
}

func (x *GetProductResponse) Reset() {
	*x = GetProductResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[99]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductResponse) ProtoMessage() {}

func (x *GetProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[99]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductResponse.ProtoReflect.Descriptor instead.
func (*GetProductResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{99}
}

func (x *GetProductResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetProductResponse) GetProduct() *Product {
	if x != nil {
		return x.Product
	}
	return nil
}

type UpdateProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId string         `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Product   *UpdateProduct `protobuf:"bytes,2,opt,name=product,proto3" json:"product,omitempty"`
}

func (x *UpdateProductRequest) Reset() {
	*x = UpdateProductRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[100]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProductRequest) ProtoMessage() {}

func (x *UpdateProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[100]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProductRequest.ProtoReflect.Descriptor instead.
func (*UpdateProductRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{100}
}

func (x *UpdateProductRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *UpdateProductRequest) GetProduct() *UpdateProduct {
	if x != nil {
		return x.Product
	}
	return nil
}

type UpdateProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateProductResponse) Reset() {
	*x = UpdateProductResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[101]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProductResponse) ProtoMessage() {}

func (x *UpdateProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[101]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProductResponse.ProtoReflect.Descriptor instead.
func (*UpdateProductResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{101}
}

func (x *UpdateProductResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SearchProductsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query             string  `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	ProductCategoryId *string `protobuf:"bytes,2,opt,name=product_category_id,json=productCategoryId,proto3,oneof" json:"product_category_id,omitempty"`
}

func (x *SearchProductsRequest) Reset() {
	*x = SearchProductsRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[102]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchProductsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchProductsRequest) ProtoMessage() {}

func (x *SearchProductsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[102]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchProductsRequest.ProtoReflect.Descriptor instead.
func (*SearchProductsRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{102}
}

func (x *SearchProductsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchProductsRequest) GetProductCategoryId() string {
	if x != nil && x.ProductCategoryId != nil {
		return *x.ProductCategoryId
	}
	return ""
}

type SearchProductsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message  string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Products []*SearchProductResult `protobuf:"bytes,2,rep,name=products,proto3" json:"products,omitempty"`
}

func (x *SearchProductsResponse) Reset() {
	*x = SearchProductsResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[103]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchProductsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchProductsResponse) ProtoMessage() {}

func (x *SearchProductsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[103]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchProductsResponse.ProtoReflect.Descriptor instead.
func (*SearchProductsResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{103}
}

func (x *SearchProductsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SearchProductsResponse) GetProducts() []*SearchProductResult {
	if x != nil {
		return x.Products
	}
	return nil
}

type SuspendProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId string `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *SuspendProductRequest) Reset() {
	*x = SuspendProductRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[104]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuspendProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuspendProductRequest) ProtoMessage() {}

func (x *SuspendProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[104]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuspendProductRequest.ProtoReflect.Descriptor instead.
func (*SuspendProductRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{104}
}

func (x *SuspendProductRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type SuspendProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SuspendProductResponse) Reset() {
	*x = SuspendProductResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[105]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuspendProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuspendProductResponse) ProtoMessage() {}

func (x *SuspendProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[105]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuspendProductResponse.ProtoReflect.Descriptor instead.
func (*SuspendProductResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{105}
}

func (x *SuspendProductResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ActivateProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId string `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *ActivateProductRequest) Reset() {
	*x = ActivateProductRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[106]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivateProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateProductRequest) ProtoMessage() {}

func (x *ActivateProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[106]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateProductRequest.ProtoReflect.Descriptor instead.
func (*ActivateProductRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{106}
}

func (x *ActivateProductRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type ActivateProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ActivateProductResponse) Reset() {
	*x = ActivateProductResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[107]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivateProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateProductResponse) ProtoMessage() {}

func (x *ActivateProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[107]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateProductResponse.ProtoReflect.Descriptor instead.
func (*ActivateProductResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{107}
}

func (x *ActivateProductResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AddBusinessProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId        string   `protobuf:"bytes,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	ProductId         string   `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	ImagesId          []string `protobuf:"bytes,3,rep,name=images_id,json=imagesId,proto3" json:"images_id,omitempty"`
	AdditionalDetails []string `protobuf:"bytes,4,rep,name=additional_details,json=additionalDetails,proto3" json:"additional_details,omitempty"`
}

func (x *AddBusinessProductRequest) Reset() {
	*x = AddBusinessProductRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[108]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBusinessProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBusinessProductRequest) ProtoMessage() {}

func (x *AddBusinessProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[108]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBusinessProductRequest.ProtoReflect.Descriptor instead.
func (*AddBusinessProductRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{108}
}

func (x *AddBusinessProductRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

func (x *AddBusinessProductRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *AddBusinessProductRequest) GetImagesId() []string {
	if x != nil {
		return x.ImagesId
	}
	return nil
}

func (x *AddBusinessProductRequest) GetAdditionalDetails() []string {
	if x != nil {
		return x.AdditionalDetails
	}
	return nil
}

type AddBusinessProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddBusinessProductResponse) Reset() {
	*x = AddBusinessProductResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[109]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBusinessProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBusinessProductResponse) ProtoMessage() {}

func (x *AddBusinessProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[109]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBusinessProductResponse.ProtoReflect.Descriptor instead.
func (*AddBusinessProductResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{109}
}

func (x *AddBusinessProductResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetBusinessProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId string `protobuf:"bytes,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	ProductId  string `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *GetBusinessProductRequest) Reset() {
	*x = GetBusinessProductRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[110]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBusinessProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessProductRequest) ProtoMessage() {}

func (x *GetBusinessProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[110]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessProductRequest.ProtoReflect.Descriptor instead.
func (*GetBusinessProductRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{110}
}

func (x *GetBusinessProductRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

func (x *GetBusinessProductRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type GetBusinessProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message         string           `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	BusinessProduct *BusinessProduct `protobuf:"bytes,2,opt,name=business_product,json=businessProduct,proto3" json:"business_product,omitempty"`
}

func (x *GetBusinessProductResponse) Reset() {
	*x = GetBusinessProductResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[111]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBusinessProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessProductResponse) ProtoMessage() {}

func (x *GetBusinessProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[111]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessProductResponse.ProtoReflect.Descriptor instead.
func (*GetBusinessProductResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{111}
}

func (x *GetBusinessProductResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetBusinessProductResponse) GetBusinessProduct() *BusinessProduct {
	if x != nil {
		return x.BusinessProduct
	}
	return nil
}

type UpdateBusinessProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId        string   `protobuf:"bytes,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	ProductId         string   `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	ImagesId          []string `protobuf:"bytes,3,rep,name=images_id,json=imagesId,proto3" json:"images_id,omitempty"`
	AdditionalDetails []string `protobuf:"bytes,4,rep,name=additional_details,json=additionalDetails,proto3" json:"additional_details,omitempty"`
}

func (x *UpdateBusinessProductRequest) Reset() {
	*x = UpdateBusinessProductRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[112]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBusinessProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBusinessProductRequest) ProtoMessage() {}

func (x *UpdateBusinessProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[112]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBusinessProductRequest.ProtoReflect.Descriptor instead.
func (*UpdateBusinessProductRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{112}
}

func (x *UpdateBusinessProductRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

func (x *UpdateBusinessProductRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *UpdateBusinessProductRequest) GetImagesId() []string {
	if x != nil {
		return x.ImagesId
	}
	return nil
}

func (x *UpdateBusinessProductRequest) GetAdditionalDetails() []string {
	if x != nil {
		return x.AdditionalDetails
	}
	return nil
}

type UpdateBusinessProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateBusinessProductResponse) Reset() {
	*x = UpdateBusinessProductResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[113]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBusinessProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBusinessProductResponse) ProtoMessage() {}

func (x *UpdateBusinessProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[113]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBusinessProductResponse.ProtoReflect.Descriptor instead.
func (*UpdateBusinessProductResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{113}
}

func (x *UpdateBusinessProductResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SearchBusinessProductsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query             string  `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	ProductCategoryId *string `protobuf:"bytes,2,opt,name=product_category_id,json=productCategoryId,proto3,oneof" json:"product_category_id,omitempty"`
}

func (x *SearchBusinessProductsRequest) Reset() {
	*x = SearchBusinessProductsRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[114]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchBusinessProductsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchBusinessProductsRequest) ProtoMessage() {}

func (x *SearchBusinessProductsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[114]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchBusinessProductsRequest.ProtoReflect.Descriptor instead.
func (*SearchBusinessProductsRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{114}
}

func (x *SearchBusinessProductsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchBusinessProductsRequest) GetProductCategoryId() string {
	if x != nil && x.ProductCategoryId != nil {
		return *x.ProductCategoryId
	}
	return ""
}

type SearchBusinessProductsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message  string                         `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Products []*SearchBusinessProductResult `protobuf:"bytes,2,rep,name=products,proto3" json:"products,omitempty"`
}

func (x *SearchBusinessProductsResponse) Reset() {
	*x = SearchBusinessProductsResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[115]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchBusinessProductsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchBusinessProductsResponse) ProtoMessage() {}

func (x *SearchBusinessProductsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[115]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchBusinessProductsResponse.ProtoReflect.Descriptor instead.
func (*SearchBusinessProductsResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{115}
}

func (x *SearchBusinessProductsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SearchBusinessProductsResponse) GetProducts() []*SearchBusinessProductResult {
	if x != nil {
		return x.Products
	}
	return nil
}

type SuspendBusinessProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId string `protobuf:"bytes,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	ProductId  string `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *SuspendBusinessProductRequest) Reset() {
	*x = SuspendBusinessProductRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[116]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuspendBusinessProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuspendBusinessProductRequest) ProtoMessage() {}

func (x *SuspendBusinessProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[116]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuspendBusinessProductRequest.ProtoReflect.Descriptor instead.
func (*SuspendBusinessProductRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{116}
}

func (x *SuspendBusinessProductRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

func (x *SuspendBusinessProductRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type SuspendBusinessProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SuspendBusinessProductResponse) Reset() {
	*x = SuspendBusinessProductResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[117]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuspendBusinessProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuspendBusinessProductResponse) ProtoMessage() {}

func (x *SuspendBusinessProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[117]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuspendBusinessProductResponse.ProtoReflect.Descriptor instead.
func (*SuspendBusinessProductResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{117}
}

func (x *SuspendBusinessProductResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ActivateBusinessProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId string `protobuf:"bytes,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	ProductId  string `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *ActivateBusinessProductRequest) Reset() {
	*x = ActivateBusinessProductRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[118]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivateBusinessProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateBusinessProductRequest) ProtoMessage() {}

func (x *ActivateBusinessProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[118]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateBusinessProductRequest.ProtoReflect.Descriptor instead.
func (*ActivateBusinessProductRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{118}
}

func (x *ActivateBusinessProductRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

func (x *ActivateBusinessProductRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type ActivateBusinessProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ActivateBusinessProductResponse) Reset() {
	*x = ActivateBusinessProductResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[119]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivateBusinessProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateBusinessProductResponse) ProtoMessage() {}

func (x *ActivateBusinessProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[119]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateBusinessProductResponse.ProtoReflect.Descriptor instead.
func (*ActivateBusinessProductResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{119}
}

func (x *ActivateBusinessProductResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AddBranchProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId           string  `protobuf:"bytes,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	ProductId          string  `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Stock              int32   `protobuf:"varint,3,opt,name=stock,proto3" json:"stock,omitempty"`
	Price              float32 `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
	DiscountPercentage float32 `protobuf:"fixed32,5,opt,name=discount_percentage,json=discountPercentage,proto3" json:"discount_percentage,omitempty"`
}

func (x *AddBranchProductRequest) Reset() {
	*x = AddBranchProductRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[120]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBranchProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBranchProductRequest) ProtoMessage() {}

func (x *AddBranchProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[120]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBranchProductRequest.ProtoReflect.Descriptor instead.
func (*AddBranchProductRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{120}
}

func (x *AddBranchProductRequest) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *AddBranchProductRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *AddBranchProductRequest) GetStock() int32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *AddBranchProductRequest) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *AddBranchProductRequest) GetDiscountPercentage() float32 {
	if x != nil {
		return x.DiscountPercentage
	}
	return 0
}

type AddBranchProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddBranchProductResponse) Reset() {
	*x = AddBranchProductResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[121]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBranchProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBranchProductResponse) ProtoMessage() {}

func (x *AddBranchProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[121]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBranchProductResponse.ProtoReflect.Descriptor instead.
func (*AddBranchProductResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{121}
}

func (x *AddBranchProductResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetBranchProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId  string `protobuf:"bytes,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	ProductId string `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *GetBranchProductRequest) Reset() {
	*x = GetBranchProductRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[122]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBranchProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBranchProductRequest) ProtoMessage() {}

func (x *GetBranchProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[122]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBranchProductRequest.ProtoReflect.Descriptor instead.
func (*GetBranchProductRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{122}
}

func (x *GetBranchProductRequest) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *GetBranchProductRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type GetBranchProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message       string         `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	BranchProduct *BranchProduct `protobuf:"bytes,2,opt,name=branch_product,json=branchProduct,proto3" json:"branch_product,omitempty"`
}

func (x *GetBranchProductResponse) Reset() {
	*x = GetBranchProductResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[123]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBranchProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBranchProductResponse) ProtoMessage() {}

func (x *GetBranchProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[123]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBranchProductResponse.ProtoReflect.Descriptor instead.
func (*GetBranchProductResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{123}
}

func (x *GetBranchProductResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetBranchProductResponse) GetBranchProduct() *BranchProduct {
	if x != nil {
		return x.BranchProduct
	}
	return nil
}

type SearchBranchProductsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query             string  `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	ProductCategoryId *string `protobuf:"bytes,2,opt,name=product_category_id,json=productCategoryId,proto3,oneof" json:"product_category_id,omitempty"`
}

func (x *SearchBranchProductsRequest) Reset() {
	*x = SearchBranchProductsRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[124]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchBranchProductsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchBranchProductsRequest) ProtoMessage() {}

func (x *SearchBranchProductsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[124]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchBranchProductsRequest.ProtoReflect.Descriptor instead.
func (*SearchBranchProductsRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{124}
}

func (x *SearchBranchProductsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchBranchProductsRequest) GetProductCategoryId() string {
	if x != nil && x.ProductCategoryId != nil {
		return *x.ProductCategoryId
	}
	return ""
}

type SearchBranchProductsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message  string                       `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Products []*SearchBranchProductResult `protobuf:"bytes,2,rep,name=products,proto3" json:"products,omitempty"`
}

func (x *SearchBranchProductsResponse) Reset() {
	*x = SearchBranchProductsResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[125]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchBranchProductsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchBranchProductsResponse) ProtoMessage() {}

func (x *SearchBranchProductsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[125]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchBranchProductsResponse.ProtoReflect.Descriptor instead.
func (*SearchBranchProductsResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{125}
}

func (x *SearchBranchProductsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SearchBranchProductsResponse) GetProducts() []*SearchBranchProductResult {
	if x != nil {
		return x.Products
	}
	return nil
}

type UpdateBranchProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId           string   `protobuf:"bytes,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	ProductId          string   `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Stock              *int32   `protobuf:"varint,3,opt,name=stock,proto3,oneof" json:"stock,omitempty"`
	Price              *float32 `protobuf:"fixed32,4,opt,name=price,proto3,oneof" json:"price,omitempty"`
	DiscountPercentage *float32 `protobuf:"fixed32,5,opt,name=discount_percentage,json=discountPercentage,proto3,oneof" json:"discount_percentage,omitempty"`
}

func (x *UpdateBranchProductRequest) Reset() {
	*x = UpdateBranchProductRequest{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[126]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBranchProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBranchProductRequest) ProtoMessage() {}

func (x *UpdateBranchProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[126]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBranchProductRequest.ProtoReflect.Descriptor instead.
func (*UpdateBranchProductRequest) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{126}
}

func (x *UpdateBranchProductRequest) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *UpdateBranchProductRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *UpdateBranchProductRequest) GetStock() int32 {
	if x != nil && x.Stock != nil {
		return *x.Stock
	}
	return 0
}

func (x *UpdateBranchProductRequest) GetPrice() float32 {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return 0
}

func (x *UpdateBranchProductRequest) GetDiscountPercentage() float32 {
	if x != nil && x.DiscountPercentage != nil {
		return *x.DiscountPercentage
	}
	return 0
}

type UpdateBranchProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateBranchProductResponse) Reset() {
	*x = UpdateBranchProductResponse{}
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[127]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBranchProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBranchProductResponse) ProtoMessage() {}

func (x *UpdateBranchProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pixel_plaza_shop_proto_msgTypes[127]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBranchProductResponse.ProtoReflect.Descriptor instead.
func (*UpdateBranchProductResponse) Descriptor() ([]byte, []int) {
	return file_proto_pixel_plaza_shop_proto_rawDescGZIP(), []int{127}
}

func (x *UpdateBranchProductResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_pixel_plaza_shop_proto protoreflect.FileDescriptor

var file_proto_pixel_plaza_shop_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c,
	0x61, 0x7a, 0x61, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b,
	0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x86, 0x01, 0x0a, 0x05, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x66, 0x6c, 0x6f, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x6c, 0x6c, 0x46, 0x6c, 0x6f,
	0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x5f,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x71,
	0x75, 0x61, 0x72, 0x65, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6c,
	0x6f, 0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x6f,
	0x72, 0x73, 0x22, 0x46, 0x0a, 0x0e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9c, 0x01, 0x0a, 0x0d, 0x41,
	0x64, 0x64, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x02, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0xbd, 0x01, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02,
	0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x69, 0x64,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x70,
	0x61, 0x69, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x73, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65,
	0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12,
	0x3d, 0x0a, 0x0c, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c,
	0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e,
	0x74, 0x52, 0x0b, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x47,
	0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3d, 0x0a, 0x03, 0x54, 0x6f, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x61, 0x67, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x61, 0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x6f, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x6f, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0x68, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x6f, 0x79, 0x12, 0x20, 0x0a, 0x09, 0x61, 0x67, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x61, 0x67, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x74, 0x6f, 0x79, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x74, 0x6f, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x61, 0x67, 0x65, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x74, 0x6f, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x22, 0x45, 0x0a, 0x04, 0x46, 0x6f, 0x6f, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6f, 0x6f, 0x64,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6f, 0x6f,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x67, 0x72,
	0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x5e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x6f, 0x6f, 0x64, 0x12, 0x20, 0x0a, 0x09, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x66, 0x6f, 0x6f, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65,
	0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e,
	0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x66, 0x6f,
	0x6f, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x0b, 0x45, 0x6c, 0x65, 0x63,
	0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x73, 0x12, 0x39, 0x0a, 0x18, 0x74, 0x65, 0x63, 0x68, 0x6e,
	0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x17, 0x74, 0x65, 0x63, 0x68, 0x6e,
	0x69, 0x63, 0x61, 0x6c, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x19, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x98, 0x01,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e,
	0x69, 0x63, 0x73, 0x12, 0x39, 0x0a, 0x18, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c,
	0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x17, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x19,
	0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0xd9, 0x01, 0x0a, 0x04, 0x42, 0x6f, 0x6f,
	0x6b, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x73, 0x62, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x73, 0x62, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x67,
	0x65, 0x6e, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e,
	0x72, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x22, 0xc7, 0x02, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x6f, 0x6f, 0x6b, 0x12, 0x17, 0x0a, 0x04, 0x69, 0x73, 0x62, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x04, 0x69, 0x73, 0x62, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x09,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06,
	0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65,
	0x6e, 0x72, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x03, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x04, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x73, 0x62, 0x6e, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0xa0,
	0x01, 0x0a, 0x08, 0x43, 0x6c, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x12, 0x1b, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1b,
	0x0a, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x22, 0xd5, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x74,
	0x68, 0x69, 0x6e, 0x67, 0x12, 0x17, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x6d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x96, 0x05, 0x0a, 0x07, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x62, 0x61, 0x72,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x62, 0x61,
	0x72, 0x63, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x48, 0x01, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x02, 0x48, 0x02, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x02, 0x48, 0x03, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a,
	0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x48, 0x04, 0x52,
	0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x03, 0x74, 0x6f,
	0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f,
	0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x54, 0x6f, 0x79, 0x48, 0x05, 0x52, 0x03, 0x74, 0x6f, 0x79,
	0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x04, 0x66, 0x6f, 0x6f, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e,
	0x46, 0x6f, 0x6f, 0x64, 0x48, 0x06, 0x52, 0x04, 0x66, 0x6f, 0x6f, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x3f, 0x0a, 0x0b, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61,
	0x7a, 0x61, 0x2e, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x73, 0x48, 0x07,
	0x52, 0x0b, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x2a, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x42, 0x6f, 0x6f,
	0x6b, 0x48, 0x08, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x08,
	0x63, 0x6c, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x43, 0x6c, 0x6f,
	0x74, 0x68, 0x69, 0x6e, 0x67, 0x48, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x6f, 0x74, 0x68, 0x69, 0x6e,
	0x67, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x74, 0x6f, 0x79, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x66, 0x6f, 0x6f, 0x64, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x73, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x6c, 0x6f, 0x74, 0x68, 0x69,
	0x6e, 0x67, 0x22, 0xbb, 0x05, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x57, 0x69,
	0x74, 0x68, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x62, 0x61, 0x72, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x62, 0x61, 0x72, 0x63,
	0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x48, 0x01, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x02, 0x48, 0x02, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x19, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x48,
	0x03, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x48, 0x04, 0x52, 0x06, 0x6c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x03, 0x74, 0x6f, 0x79, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c,
	0x61, 0x7a, 0x61, 0x2e, 0x54, 0x6f, 0x79, 0x48, 0x05, 0x52, 0x03, 0x74, 0x6f, 0x79, 0x88, 0x01,
	0x01, 0x12, 0x2a, 0x0a, 0x04, 0x66, 0x6f, 0x6f, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x46, 0x6f,
	0x6f, 0x64, 0x48, 0x06, 0x52, 0x04, 0x66, 0x6f, 0x6f, 0x64, 0x88, 0x01, 0x01, 0x12, 0x3f, 0x0a,
	0x0b, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x73, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61,
	0x2e, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x73, 0x48, 0x07, 0x52, 0x0b,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2a,
	0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x48,
	0x08, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x08, 0x63, 0x6c,
	0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70,
	0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x43, 0x6c, 0x6f, 0x74, 0x68,
	0x69, 0x6e, 0x67, 0x48, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x88,
	0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x74, 0x6f,
	0x79, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x66, 0x6f, 0x6f, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x62,
	0x6f, 0x6f, 0x6b, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x6c, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67,
	0x22, 0xfb, 0x05, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x48, 0x03, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x62, 0x61,
	0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x07, 0x62,
	0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x48, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x48, 0x06, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x02, 0x48, 0x07, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x1b,
	0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x48, 0x08,
	0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x03, 0x74,
	0x6f, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c,
	0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x79,
	0x48, 0x09, 0x52, 0x03, 0x74, 0x6f, 0x79, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x04, 0x66, 0x6f,
	0x6f, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c,
	0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6f,
	0x64, 0x48, 0x0a, 0x52, 0x04, 0x66, 0x6f, 0x6f, 0x64, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x0b,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63,
	0x73, 0x48, 0x0b, 0x52, 0x0b, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x48, 0x0c, 0x52, 0x04, 0x62, 0x6f,
	0x6f, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x08, 0x63, 0x6c, 0x6f, 0x74, 0x68, 0x69, 0x6e,
	0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f,
	0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x74,
	0x68, 0x69, 0x6e, 0x67, 0x48, 0x0d, 0x52, 0x08, 0x63, 0x6c, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67,
	0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x74, 0x6f, 0x79, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x66, 0x6f, 0x6f, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x62, 0x6f, 0x6f,
	0x6b, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x6c, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x22, 0x7c,
	0x0a, 0x0f, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x49, 0x64, 0x12, 0x2d, 0x0a,
	0x12, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x61, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xe8, 0x01, 0x0a,
	0x0d, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x2e,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x61,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x12, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x22, 0xd4, 0x01, 0x0a, 0x1b, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x49, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11,
	0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x22, 0xaf, 0x02, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x11, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x12, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x22, 0x4a, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x2f, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x35, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0x9e, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x37, 0x0a, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08,
	0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x22, 0x70, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x16, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5e,
	0x0a, 0x20, 0x53, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x3d,
	0x0a, 0x21, 0x53, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x39, 0x0a,
	0x16, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x17, 0x53, 0x75, 0x73, 0x70,
	0x65, 0x6e, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3a, 0x0a,
	0x17, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x18, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x38, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x16, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x53, 0x0a,
	0x17, 0x41, 0x64, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x34, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x56, 0x0a, 0x1a, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x37, 0x0a, 0x1b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3b, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x54, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x35,
	0x0a, 0x19, 0x41, 0x64, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x53, 0x0a, 0x17, 0x49, 0x73, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x18, 0x49, 0x73,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x60, 0x0a,
	0x18, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x0f, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61,
	0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52,
	0x0e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22,
	0x35, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x48, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x22, 0x7b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0e, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0xa4, 0x01,
	0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a,
	0x12, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x38, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x71,
	0x0a, 0x20, 0x41, 0x64, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x22, 0x3d, 0x0a, 0x21, 0x41, 0x64, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x45, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0x6f, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x73, 0x22, 0x3b, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x69, 0x78,
	0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x05,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x22, 0x2c, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x2c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49,
	0x64, 0x22, 0x56, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x28, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x22, 0x2f, 0x0a, 0x12, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x13, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3d, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x55, 0x6e, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x55, 0x6e, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a,
	0x61, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x06, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x22,
	0x63, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2d, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x2f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x49, 0x64, 0x22, 0x9c, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x09, 0x6a, 0x6f,
	0x69, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x8b, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x30, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x33, 0x0a, 0x14, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x42, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x15, 0x53, 0x75, 0x73, 0x70,
	0x65, 0x6e, 0x64, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x34, 0x0a, 0x15, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49,
	0x64, 0x22, 0x32, 0x0a, 0x16, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3d, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x73, 0x22, 0x32, 0x0a, 0x13,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64,
	0x22, 0x30, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x70, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x62, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x5f, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70,
	0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x52, 0x65, 0x6e, 0x74, 0x22, 0x31, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x52, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xaa, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x33,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x02, 0x74,
	0x6f, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x42, 0x05, 0x0a,
	0x03, 0x5f, 0x74, 0x6f, 0x22, 0x71, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x52, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x5f, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xda, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x2f,
	0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x02, 0x74, 0x6f, 0x88, 0x01, 0x01, 0x12,
	0x19, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x66,
	0x72, 0x6f, 0x6d, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x74, 0x6f, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x22, 0x34, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3a, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x55, 0x6e, 0x70, 0x61, 0x69, 0x64, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x22, 0x77, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x70,
	0x61, 0x69, 0x64, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x3d, 0x0a, 0x0c, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x72, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70,
	0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65,
	0x6e, 0x74, 0x52, 0x0b, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0x46, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x6e,
	0x70, 0x61, 0x69, 0x64, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0x7f, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x6e, 0x70, 0x61, 0x69, 0x64, 0x42, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x5f, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65,
	0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x51, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x36, 0x0a, 0x1a, 0x41,
	0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x4b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x22, 0x7f, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x47, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x22, 0xa7, 0x01, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x39, 0x0a, 0x1d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x62, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x69,
	0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x2e, 0x0a, 0x12, 0x41, 0x64,
	0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x32, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x5e,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x6b,
	0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70,
	0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x31, 0x0a, 0x15, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x7a,
	0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x33, 0x0a,
	0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x11, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x22, 0x70, 0x0a, 0x16, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3c,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x22, 0x36, 0x0a, 0x15,
	0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x16, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x37, 0x0a, 0x16, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x22, 0x33, 0x0a, 0x17, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xa7, 0x01, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x49,
	0x64, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x61,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0x36, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x7f, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x47, 0x0a,
	0x10, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f,
	0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x0f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0xaa, 0x01, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x11, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x22, 0x39, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x82,
	0x01, 0x0a, 0x1d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x33, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x16, 0x0a, 0x14, 0x5f,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x5f, 0x69, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x1e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x44, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x22, 0x5f, 0x0a, 0x1d, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e,
	0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x1e, 0x53, 0x75, 0x73, 0x70, 0x65,
	0x6e, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x60, 0x0a, 0x1e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x1f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0xb2, 0x01, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x12, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x22, 0x34, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x42, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x55, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x22, 0x77, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x62, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61,
	0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x0d,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x80, 0x01,
	0x0a, 0x1b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x33, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64,
	0x22, 0x7c, 0x0a, 0x1c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70,
	0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x22, 0xf0,
	0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x05, 0x73, 0x74, 0x6f,
	0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x48, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x34, 0x0a, 0x13, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x48, 0x02, 0x52, 0x12,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61,
	0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67,
	0x65, 0x22, 0x37, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xd8, 0x28, 0x0a, 0x04, 0x53,
	0x68, 0x6f, 0x70, 0x12, 0x52, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x12, 0x1f, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61,
	0x2e, 0x41, 0x64, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a,
	0x61, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70,
	0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f,
	0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x22, 0x2e,
	0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x2d, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c,
	0x61, 0x7a, 0x61, 0x2e, 0x53, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61,
	0x7a, 0x61, 0x2e, 0x53, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x0f, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e,
	0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x23, 0x2e, 0x70, 0x69, 0x78, 0x65,
	0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x53, 0x75, 0x73,
	0x70, 0x65, 0x6e, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x10, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x24, 0x2e, 0x70, 0x69, 0x78,
	0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x22, 0x2e, 0x70, 0x69,
	0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x70, 0x69, 0x78,
	0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x41,
	0x64, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x13, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x12, 0x27, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x69, 0x78, 0x65,
	0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x25, 0x2e, 0x70, 0x69, 0x78,
	0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x11, 0x41,
	0x64, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x12, 0x25, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x41,
	0x64, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f,
	0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x61, 0x0a, 0x10, 0x49, 0x73, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c,
	0x61, 0x7a, 0x61, 0x2e, 0x49, 0x73, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x69,
	0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x49, 0x73, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x25, 0x2e, 0x70, 0x69, 0x78, 0x65,
	0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x41,
	0x64, 0x64, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x25, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70,
	0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x6d, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x28, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c,
	0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x7c, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x2d, 0x2e, 0x70,
	0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x70, 0x69,
	0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x82, 0x01,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2f, 0x2e,
	0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30,
	0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x49, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x1c,
	0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x41, 0x64, 0x64,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70,
	0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x1c, 0x2e, 0x70, 0x69, 0x78, 0x65,
	0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f,
	0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x1f, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f,
	0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c,
	0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x55, 0x6e, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e, 0x70, 0x69,
	0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x6f,
	0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x42, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x12, 0x1d, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61,
	0x7a, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a,
	0x61, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x12, 0x1d, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61,
	0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x12, 0x27, 0x2e, 0x70, 0x69, 0x78,
	0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a,
	0x61, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x42, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x55, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12,
	0x20, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0d, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e,
	0x64, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x21, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f,
	0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x42, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x69, 0x78,
	0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x5b, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x12, 0x22, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70,
	0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a,
	0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x20, 0x2e,
	0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x70, 0x69, 0x78,
	0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x22, 0x2e, 0x70, 0x69, 0x78,
	0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x12, 0x24,
	0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61,
	0x7a, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x70, 0x61, 0x69, 0x64, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x52, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x28, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c,
	0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x70, 0x61, 0x69, 0x64, 0x42, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x6e, 0x70, 0x61, 0x69, 0x64, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x85, 0x01, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x6e, 0x70, 0x61,
	0x69, 0x64, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x30, 0x2e,
	0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x6e, 0x70, 0x61, 0x69, 0x64, 0x42, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x31, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65,
	0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x6e, 0x70, 0x61, 0x69, 0x64, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x26, 0x2e, 0x70, 0x69, 0x78,
	0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61,
	0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x26, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a,
	0x61, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x69,
	0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x29, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x70, 0x69, 0x78,
	0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1e, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70,
	0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70,
	0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1e, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f,
	0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f,
	0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x21, 0x2e, 0x70, 0x69,
	0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x22, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70,
	0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x69, 0x78,
	0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5b, 0x0a, 0x0e, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x12, 0x22, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a,
	0x61, 0x2e, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f,
	0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e,
	0x0a, 0x0f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x12, 0x23, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70,
	0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67,
	0x0a, 0x12, 0x41, 0x64, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x12, 0x26, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61,
	0x7a, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70,
	0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x26, 0x2e,
	0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c,
	0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x70, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x29, 0x2e, 0x70, 0x69, 0x78, 0x65,
	0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61,
	0x7a, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x73, 0x0a, 0x16, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x2a, 0x2e, 0x70,
	0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c,
	0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x16, 0x53, 0x75, 0x73, 0x70, 0x65,
	0x6e, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x12, 0x2a, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e,
	0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e,
	0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x53, 0x75, 0x73, 0x70,
	0x65, 0x6e, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x17,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x2b, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f,
	0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61,
	0x7a, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x24, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c,
	0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x41, 0x64, 0x64,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x24, 0x2e, 0x70, 0x69,
	0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x14, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x12, 0x28, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70,
	0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x13, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x12, 0x27, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x69, 0x78, 0x65,
	0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x1b, 0x5a, 0x19, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65,
	0x64, 0x2f, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x2f, 0x73, 0x68,
	0x6f, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_pixel_plaza_shop_proto_rawDescOnce sync.Once
	file_proto_pixel_plaza_shop_proto_rawDescData = file_proto_pixel_plaza_shop_proto_rawDesc
)

func file_proto_pixel_plaza_shop_proto_rawDescGZIP() []byte {
	file_proto_pixel_plaza_shop_proto_rawDescOnce.Do(func() {
		file_proto_pixel_plaza_shop_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_pixel_plaza_shop_proto_rawDescData)
	})
	return file_proto_pixel_plaza_shop_proto_rawDescData
}

var file_proto_pixel_plaza_shop_proto_msgTypes = make([]protoimpl.MessageInfo, 128)
var file_proto_pixel_plaza_shop_proto_goTypes = []any{
	(*Store)(nil),                                // 0: pixel_plaza.Store
	(*MarketCategory)(nil),                       // 1: pixel_plaza.MarketCategory
	(*AddBranchRent)(nil),                        // 2: pixel_plaza.AddBranchRent
	(*GetBranchRent)(nil),                        // 3: pixel_plaza.GetBranchRent
	(*GetBusinessBranchRent)(nil),                // 4: pixel_plaza.GetBusinessBranchRent
	(*ProductCategory)(nil),                      // 5: pixel_plaza.ProductCategory
	(*Toy)(nil),                                  // 6: pixel_plaza.Toy
	(*UpdateToy)(nil),                            // 7: pixel_plaza.UpdateToy
	(*Food)(nil),                                 // 8: pixel_plaza.Food
	(*UpdateFood)(nil),                           // 9: pixel_plaza.UpdateFood
	(*Electronics)(nil),                          // 10: pixel_plaza.Electronics
	(*UpdateElectronics)(nil),                    // 11: pixel_plaza.UpdateElectronics
	(*Book)(nil),                                 // 12: pixel_plaza.Book
	(*UpdateBook)(nil),                           // 13: pixel_plaza.UpdateBook
	(*Clothing)(nil),                             // 14: pixel_plaza.Clothing
	(*UpdateClothing)(nil),                       // 15: pixel_plaza.UpdateClothing
	(*Product)(nil),                              // 16: pixel_plaza.Product
	(*ProductWithId)(nil),                        // 17: pixel_plaza.ProductWithId
	(*UpdateProduct)(nil),                        // 18: pixel_plaza.UpdateProduct
	(*BusinessProduct)(nil),                      // 19: pixel_plaza.BusinessProduct
	(*BranchProduct)(nil),                        // 20: pixel_plaza.BranchProduct
	(*SearchProductResult)(nil),                  // 21: pixel_plaza.SearchProductResult
	(*SearchBusinessProductResult)(nil),          // 22: pixel_plaza.SearchBusinessProductResult
	(*SearchBranchProductResult)(nil),            // 23: pixel_plaza.SearchBranchProductResult
	(*AddBusinessRequest)(nil),                   // 24: pixel_plaza.AddBusinessRequest
	(*AddBusinessResponse)(nil),                  // 25: pixel_plaza.AddBusinessResponse
	(*GetBusinessRequest)(nil),                   // 26: pixel_plaza.GetBusinessRequest
	(*GetBusinessResponse)(nil),                  // 27: pixel_plaza.GetBusinessResponse
	(*UpdateBusinessRequest)(nil),                // 28: pixel_plaza.UpdateBusinessRequest
	(*UpdateBusinessResponse)(nil),               // 29: pixel_plaza.UpdateBusinessResponse
	(*SetBusinessProfilePictureRequest)(nil),     // 30: pixel_plaza.SetBusinessProfilePictureRequest
	(*SetBusinessProfilePictureResponse)(nil),    // 31: pixel_plaza.SetBusinessProfilePictureResponse
	(*SuspendBusinessRequest)(nil),               // 32: pixel_plaza.SuspendBusinessRequest
	(*SuspendBusinessResponse)(nil),              // 33: pixel_plaza.SuspendBusinessResponse
	(*ActivateBusinessRequest)(nil),              // 34: pixel_plaza.ActivateBusinessRequest
	(*ActivateBusinessResponse)(nil),             // 35: pixel_plaza.ActivateBusinessResponse
	(*DeleteBusinessRequest)(nil),                // 36: pixel_plaza.DeleteBusinessRequest
	(*DeleteBusinessResponse)(nil),               // 37: pixel_plaza.DeleteBusinessResponse
	(*AddBusinessOwnerRequest)(nil),              // 38: pixel_plaza.AddBusinessOwnerRequest
	(*AddBusinessOwnerResponse)(nil),             // 39: pixel_plaza.AddBusinessOwnerResponse
	(*RemoveBusinessOwnerRequest)(nil),           // 40: pixel_plaza.RemoveBusinessOwnerRequest
	(*RemoveBusinessOwnerResponse)(nil),          // 41: pixel_plaza.RemoveBusinessOwnerResponse
	(*GetBusinessOwnersRequest)(nil),             // 42: pixel_plaza.GetBusinessOwnersRequest
	(*GetBusinessOwnersResponse)(nil),            // 43: pixel_plaza.GetBusinessOwnersResponse
	(*AddBusinessClientRequest)(nil),             // 44: pixel_plaza.AddBusinessClientRequest
	(*AddBusinessClientResponse)(nil),            // 45: pixel_plaza.AddBusinessClientResponse
	(*IsBusinessClientRequest)(nil),              // 46: pixel_plaza.IsBusinessClientRequest
	(*IsBusinessClientResponse)(nil),             // 47: pixel_plaza.IsBusinessClientResponse
	(*AddMarketCategoryRequest)(nil),             // 48: pixel_plaza.AddMarketCategoryRequest
	(*AddMarketCategoryResponse)(nil),            // 49: pixel_plaza.AddMarketCategoryResponse
	(*GetMarketCategoryRequest)(nil),             // 50: pixel_plaza.GetMarketCategoryRequest
	(*GetMarketCategoryResponse)(nil),            // 51: pixel_plaza.GetMarketCategoryResponse
	(*UpdateMarketCategoryRequest)(nil),          // 52: pixel_plaza.UpdateMarketCategoryRequest
	(*UpdateMarketCategoryResponse)(nil),         // 53: pixel_plaza.UpdateMarketCategoryResponse
	(*AddBusinessMarketCategoryRequest)(nil),     // 54: pixel_plaza.AddBusinessMarketCategoryRequest
	(*AddBusinessMarketCategoryResponse)(nil),    // 55: pixel_plaza.AddBusinessMarketCategoryResponse
	(*GetBusinessMarketCategoriesRequest)(nil),   // 56: pixel_plaza.GetBusinessMarketCategoriesRequest
	(*GetBusinessMarketCategoriesResponse)(nil),  // 57: pixel_plaza.GetBusinessMarketCategoriesResponse
	(*AddStoreRequest)(nil),                      // 58: pixel_plaza.AddStoreRequest
	(*AddStoreResponse)(nil),                     // 59: pixel_plaza.AddStoreResponse
	(*GetStoreRequest)(nil),                      // 60: pixel_plaza.GetStoreRequest
	(*GetStoreResponse)(nil),                     // 61: pixel_plaza.GetStoreResponse
	(*DeleteStoreRequest)(nil),                   // 62: pixel_plaza.DeleteStoreRequest
	(*DeleteStoreResponse)(nil),                  // 63: pixel_plaza.DeleteStoreResponse
	(*GetUnoccupiedStoresRequest)(nil),           // 64: pixel_plaza.GetUnoccupiedStoresRequest
	(*GetUnoccupiedStoresResponse)(nil),          // 65: pixel_plaza.GetUnoccupiedStoresResponse
	(*AddBranchRequest)(nil),                     // 66: pixel_plaza.AddBranchRequest
	(*AddBranchResponse)(nil),                    // 67: pixel_plaza.AddBranchResponse
	(*GetBranchRequest)(nil),                     // 68: pixel_plaza.GetBranchRequest
	(*GetBranchResponse)(nil),                    // 69: pixel_plaza.GetBranchResponse
	(*UpdateBranchRequest)(nil),                  // 70: pixel_plaza.UpdateBranchRequest
	(*UpdateBranchResponse)(nil),                 // 71: pixel_plaza.UpdateBranchResponse
	(*SuspendBranchRequest)(nil),                 // 72: pixel_plaza.SuspendBranchRequest
	(*SuspendBranchResponse)(nil),                // 73: pixel_plaza.SuspendBranchResponse
	(*ActivateBranchRequest)(nil),                // 74: pixel_plaza.ActivateBranchRequest
	(*ActivateBranchResponse)(nil),               // 75: pixel_plaza.ActivateBranchResponse
	(*GetBusinessBranchesRequest)(nil),           // 76: pixel_plaza.GetBusinessBranchesRequest
	(*GetBusinessBranchesResponse)(nil),          // 77: pixel_plaza.GetBusinessBranchesResponse
	(*DeleteBranchRequest)(nil),                  // 78: pixel_plaza.DeleteBranchRequest
	(*DeleteBranchResponse)(nil),                 // 79: pixel_plaza.DeleteBranchResponse
	(*AddBranchRentRequest)(nil),                 // 80: pixel_plaza.AddBranchRentRequest
	(*AddBranchRentResponse)(nil),                // 81: pixel_plaza.AddBranchRentResponse
	(*GetBranchRentsRequest)(nil),                // 82: pixel_plaza.GetBranchRentsRequest
	(*GetBranchRentsResponse)(nil),               // 83: pixel_plaza.GetBranchRentsResponse
	(*UpdateBranchRentRequest)(nil),              // 84: pixel_plaza.UpdateBranchRentRequest
	(*UpdateBranchRentResponse)(nil),             // 85: pixel_plaza.UpdateBranchRentResponse
	(*GetUnpaidBranchRentsRequest)(nil),          // 86: pixel_plaza.GetUnpaidBranchRentsRequest
	(*GetUnpaidBranchRentsResponse)(nil),         // 87: pixel_plaza.GetUnpaidBranchRentsResponse
	(*GetBusinessUnpaidBranchRentsRequest)(nil),  // 88: pixel_plaza.GetBusinessUnpaidBranchRentsRequest
	(*GetBusinessUnpaidBranchRentsResponse)(nil), // 89: pixel_plaza.GetBusinessUnpaidBranchRentsResponse
	(*AddProductCategoryRequest)(nil),            // 90: pixel_plaza.AddProductCategoryRequest
	(*AddProductCategoryResponse)(nil),           // 91: pixel_plaza.AddProductCategoryResponse
	(*GetProductCategoryRequest)(nil),            // 92: pixel_plaza.GetProductCategoryRequest
	(*GetProductCategoryResponse)(nil),           // 93: pixel_plaza.GetProductCategoryResponse
	(*UpdateProductCategoryRequest)(nil),         // 94: pixel_plaza.UpdateProductCategoryRequest
	(*UpdateProductCategoryResponse)(nil),        // 95: pixel_plaza.UpdateProductCategoryResponse
	(*AddProductRequest)(nil),                    // 96: pixel_plaza.AddProductRequest
	(*AddProductResponse)(nil),                   // 97: pixel_plaza.AddProductResponse
	(*GetProductRequest)(nil),                    // 98: pixel_plaza.GetProductRequest
	(*GetProductResponse)(nil),                   // 99: pixel_plaza.GetProductResponse
	(*UpdateProductRequest)(nil),                 // 100: pixel_plaza.UpdateProductRequest
	(*UpdateProductResponse)(nil),                // 101: pixel_plaza.UpdateProductResponse
	(*SearchProductsRequest)(nil),                // 102: pixel_plaza.SearchProductsRequest
	(*SearchProductsResponse)(nil),               // 103: pixel_plaza.SearchProductsResponse
	(*SuspendProductRequest)(nil),                // 104: pixel_plaza.SuspendProductRequest
	(*SuspendProductResponse)(nil),               // 105: pixel_plaza.SuspendProductResponse
	(*ActivateProductRequest)(nil),               // 106: pixel_plaza.ActivateProductRequest
	(*ActivateProductResponse)(nil),              // 107: pixel_plaza.ActivateProductResponse
	(*AddBusinessProductRequest)(nil),            // 108: pixel_plaza.AddBusinessProductRequest
	(*AddBusinessProductResponse)(nil),           // 109: pixel_plaza.AddBusinessProductResponse
	(*GetBusinessProductRequest)(nil),            // 110: pixel_plaza.GetBusinessProductRequest
	(*GetBusinessProductResponse)(nil),           // 111: pixel_plaza.GetBusinessProductResponse
	(*UpdateBusinessProductRequest)(nil),         // 112: pixel_plaza.UpdateBusinessProductRequest
	(*UpdateBusinessProductResponse)(nil),        // 113: pixel_plaza.UpdateBusinessProductResponse
	(*SearchBusinessProductsRequest)(nil),        // 114: pixel_plaza.SearchBusinessProductsRequest
	(*SearchBusinessProductsResponse)(nil),       // 115: pixel_plaza.SearchBusinessProductsResponse
	(*SuspendBusinessProductRequest)(nil),        // 116: pixel_plaza.SuspendBusinessProductRequest
	(*SuspendBusinessProductResponse)(nil),       // 117: pixel_plaza.SuspendBusinessProductResponse
	(*ActivateBusinessProductRequest)(nil),       // 118: pixel_plaza.ActivateBusinessProductRequest
	(*ActivateBusinessProductResponse)(nil),      // 119: pixel_plaza.ActivateBusinessProductResponse
	(*AddBranchProductRequest)(nil),              // 120: pixel_plaza.AddBranchProductRequest
	(*AddBranchProductResponse)(nil),             // 121: pixel_plaza.AddBranchProductResponse
	(*GetBranchProductRequest)(nil),              // 122: pixel_plaza.GetBranchProductRequest
	(*GetBranchProductResponse)(nil),             // 123: pixel_plaza.GetBranchProductResponse
	(*SearchBranchProductsRequest)(nil),          // 124: pixel_plaza.SearchBranchProductsRequest
	(*SearchBranchProductsResponse)(nil),         // 125: pixel_plaza.SearchBranchProductsResponse
	(*UpdateBranchProductRequest)(nil),           // 126: pixel_plaza.UpdateBranchProductRequest
	(*UpdateBranchProductResponse)(nil),          // 127: pixel_plaza.UpdateBranchProductResponse
	(*timestamppb.Timestamp)(nil),                // 128: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                        // 129: google.protobuf.Empty
}
var file_proto_pixel_plaza_shop_proto_depIdxs = []int32{
	128, // 0: pixel_plaza.AddBranchRent.from:type_name -> google.protobuf.Timestamp
	128, // 1: pixel_plaza.AddBranchRent.to:type_name -> google.protobuf.Timestamp
	128, // 2: pixel_plaza.GetBranchRent.from:type_name -> google.protobuf.Timestamp
	128, // 3: pixel_plaza.GetBranchRent.to:type_name -> google.protobuf.Timestamp
	3,   // 4: pixel_plaza.GetBusinessBranchRent.branch_rents:type_name -> pixel_plaza.GetBranchRent
	128, // 5: pixel_plaza.Book.published_at:type_name -> google.protobuf.Timestamp
	128, // 6: pixel_plaza.UpdateBook.published_at:type_name -> google.protobuf.Timestamp
	6,   // 7: pixel_plaza.Product.toy:type_name -> pixel_plaza.Toy
	8,   // 8: pixel_plaza.Product.food:type_name -> pixel_plaza.Food
	10,  // 9: pixel_plaza.Product.electronics:type_name -> pixel_plaza.Electronics
	12,  // 10: pixel_plaza.Product.book:type_name -> pixel_plaza.Book
	14,  // 11: pixel_plaza.Product.clothing:type_name -> pixel_plaza.Clothing
	6,   // 12: pixel_plaza.ProductWithId.toy:type_name -> pixel_plaza.Toy
	8,   // 13: pixel_plaza.ProductWithId.food:type_name -> pixel_plaza.Food
	10,  // 14: pixel_plaza.ProductWithId.electronics:type_name -> pixel_plaza.Electronics
	12,  // 15: pixel_plaza.ProductWithId.book:type_name -> pixel_plaza.Book
	14,  // 16: pixel_plaza.ProductWithId.clothing:type_name -> pixel_plaza.Clothing
	7,   // 17: pixel_plaza.UpdateProduct.toy:type_name -> pixel_plaza.UpdateToy
	9,   // 18: pixel_plaza.UpdateProduct.food:type_name -> pixel_plaza.UpdateFood
	11,  // 19: pixel_plaza.UpdateProduct.electronics:type_name -> pixel_plaza.UpdateElectronics
	13,  // 20: pixel_plaza.UpdateProduct.book:type_name -> pixel_plaza.UpdateBook
	15,  // 21: pixel_plaza.UpdateProduct.clothing:type_name -> pixel_plaza.UpdateClothing
	16,  // 22: pixel_plaza.BranchProduct.product:type_name -> pixel_plaza.Product
	128, // 23: pixel_plaza.GetBusinessResponse.joined_at:type_name -> google.protobuf.Timestamp
	1,   // 24: pixel_plaza.AddMarketCategoryRequest.market_category:type_name -> pixel_plaza.MarketCategory
	1,   // 25: pixel_plaza.GetMarketCategoryResponse.market_category:type_name -> pixel_plaza.MarketCategory
	0,   // 26: pixel_plaza.AddStoreRequest.store:type_name -> pixel_plaza.Store
	0,   // 27: pixel_plaza.GetStoreResponse.store:type_name -> pixel_plaza.Store
	0,   // 28: pixel_plaza.GetUnoccupiedStoresResponse.stores:type_name -> pixel_plaza.Store
	128, // 29: pixel_plaza.GetBranchResponse.joined_at:type_name -> google.protobuf.Timestamp
	2,   // 30: pixel_plaza.AddBranchRentRequest.branch_rent:type_name -> pixel_plaza.AddBranchRent
	128, // 31: pixel_plaza.GetBranchRentsRequest.from:type_name -> google.protobuf.Timestamp
	128, // 32: pixel_plaza.GetBranchRentsRequest.to:type_name -> google.protobuf.Timestamp
	3,   // 33: pixel_plaza.GetBranchRentsResponse.branch_rents:type_name -> pixel_plaza.GetBranchRent
	128, // 34: pixel_plaza.UpdateBranchRentRequest.from:type_name -> google.protobuf.Timestamp
	128, // 35: pixel_plaza.UpdateBranchRentRequest.to:type_name -> google.protobuf.Timestamp
	3,   // 36: pixel_plaza.GetUnpaidBranchRentsResponse.branch_rents:type_name -> pixel_plaza.GetBranchRent
	3,   // 37: pixel_plaza.GetBusinessUnpaidBranchRentsResponse.branch_rents:type_name -> pixel_plaza.GetBranchRent
	5,   // 38: pixel_plaza.GetProductCategoryResponse.product_category:type_name -> pixel_plaza.ProductCategory
	16,  // 39: pixel_plaza.AddProductRequest.product:type_name -> pixel_plaza.Product
	16,  // 40: pixel_plaza.GetProductResponse.product:type_name -> pixel_plaza.Product
	18,  // 41: pixel_plaza.UpdateProductRequest.product:type_name -> pixel_plaza.UpdateProduct
	21,  // 42: pixel_plaza.SearchProductsResponse.products:type_name -> pixel_plaza.SearchProductResult
	19,  // 43: pixel_plaza.GetBusinessProductResponse.business_product:type_name -> pixel_plaza.BusinessProduct
	22,  // 44: pixel_plaza.SearchBusinessProductsResponse.products:type_name -> pixel_plaza.SearchBusinessProductResult
	20,  // 45: pixel_plaza.GetBranchProductResponse.branch_product:type_name -> pixel_plaza.BranchProduct
	23,  // 46: pixel_plaza.SearchBranchProductsResponse.products:type_name -> pixel_plaza.SearchBranchProductResult
	24,  // 47: pixel_plaza.Shop.AddBusiness:input_type -> pixel_plaza.AddBusinessRequest
	26,  // 48: pixel_plaza.Shop.GetBusiness:input_type -> pixel_plaza.GetBusinessRequest
	28,  // 49: pixel_plaza.Shop.UpdateBusiness:input_type -> pixel_plaza.UpdateBusinessRequest
	30,  // 50: pixel_plaza.Shop.SetBusinessProfilePicture:input_type -> pixel_plaza.SetBusinessProfilePictureRequest
	32,  // 51: pixel_plaza.Shop.SuspendBusiness:input_type -> pixel_plaza.SuspendBusinessRequest
	34,  // 52: pixel_plaza.Shop.ActivateBusiness:input_type -> pixel_plaza.ActivateBusinessRequest
	36,  // 53: pixel_plaza.Shop.DeleteBusiness:input_type -> pixel_plaza.DeleteBusinessRequest
	38,  // 54: pixel_plaza.Shop.AddBusinessOwner:input_type -> pixel_plaza.AddBusinessOwnerRequest
	40,  // 55: pixel_plaza.Shop.RemoveBusinessOwner:input_type -> pixel_plaza.RemoveBusinessOwnerRequest
	42,  // 56: pixel_plaza.Shop.GetBusinessOwners:input_type -> pixel_plaza.GetBusinessOwnersRequest
	44,  // 57: pixel_plaza.Shop.AddBusinessClient:input_type -> pixel_plaza.AddBusinessClientRequest
	46,  // 58: pixel_plaza.Shop.IsBusinessClient:input_type -> pixel_plaza.IsBusinessClientRequest
	48,  // 59: pixel_plaza.Shop.AddMarketCategory:input_type -> pixel_plaza.AddMarketCategoryRequest
	50,  // 60: pixel_plaza.Shop.GetMarketCategory:input_type -> pixel_plaza.GetMarketCategoryRequest
	52,  // 61: pixel_plaza.Shop.UpdateMarketCategory:input_type -> pixel_plaza.UpdateMarketCategoryRequest
	54,  // 62: pixel_plaza.Shop.AddBusinessMarketCategory:input_type -> pixel_plaza.AddBusinessMarketCategoryRequest
	56,  // 63: pixel_plaza.Shop.GetBusinessMarketCategories:input_type -> pixel_plaza.GetBusinessMarketCategoriesRequest
	58,  // 64: pixel_plaza.Shop.AddStore:input_type -> pixel_plaza.AddStoreRequest
	60,  // 65: pixel_plaza.Shop.GetStore:input_type -> pixel_plaza.GetStoreRequest
	62,  // 66: pixel_plaza.Shop.DeleteStore:input_type -> pixel_plaza.DeleteStoreRequest
	129, // 67: pixel_plaza.Shop.GetUnoccupiedStores:input_type -> google.protobuf.Empty
	66,  // 68: pixel_plaza.Shop.AddBranch:input_type -> pixel_plaza.AddBranchRequest
	68,  // 69: pixel_plaza.Shop.GetBranch:input_type -> pixel_plaza.GetBranchRequest
	76,  // 70: pixel_plaza.Shop.GetBusinessBranches:input_type -> pixel_plaza.GetBusinessBranchesRequest
	70,  // 71: pixel_plaza.Shop.UpdateBranch:input_type -> pixel_plaza.UpdateBranchRequest
	72,  // 72: pixel_plaza.Shop.SuspendBranch:input_type -> pixel_plaza.SuspendBranchRequest
	74,  // 73: pixel_plaza.Shop.ActivateBranch:input_type -> pixel_plaza.ActivateBranchRequest
	78,  // 74: pixel_plaza.Shop.DeleteBranch:input_type -> pixel_plaza.DeleteBranchRequest
	80,  // 75: pixel_plaza.Shop.AddStoreBranchRent:input_type -> pixel_plaza.AddBranchRentRequest
	82,  // 76: pixel_plaza.Shop.GetStoreBranchRents:input_type -> pixel_plaza.GetBranchRentsRequest
	84,  // 77: pixel_plaza.Shop.UpdateStoreBranchRent:input_type -> pixel_plaza.UpdateBranchRentRequest
	86,  // 78: pixel_plaza.Shop.GetUnpaidBranchRents:input_type -> pixel_plaza.GetUnpaidBranchRentsRequest
	88,  // 79: pixel_plaza.Shop.GetBusinessUnpaidBranchRents:input_type -> pixel_plaza.GetBusinessUnpaidBranchRentsRequest
	90,  // 80: pixel_plaza.Shop.AddProductCategory:input_type -> pixel_plaza.AddProductCategoryRequest
	92,  // 81: pixel_plaza.Shop.GetProductCategory:input_type -> pixel_plaza.GetProductCategoryRequest
	94,  // 82: pixel_plaza.Shop.UpdateProductCategory:input_type -> pixel_plaza.UpdateProductCategoryRequest
	96,  // 83: pixel_plaza.Shop.AddProduct:input_type -> pixel_plaza.AddProductRequest
	98,  // 84: pixel_plaza.Shop.GetProduct:input_type -> pixel_plaza.GetProductRequest
	100, // 85: pixel_plaza.Shop.UpdateProduct:input_type -> pixel_plaza.UpdateProductRequest
	102, // 86: pixel_plaza.Shop.SearchProducts:input_type -> pixel_plaza.SearchProductsRequest
	104, // 87: pixel_plaza.Shop.SuspendProduct:input_type -> pixel_plaza.SuspendProductRequest
	106, // 88: pixel_plaza.Shop.ActivateProduct:input_type -> pixel_plaza.ActivateProductRequest
	108, // 89: pixel_plaza.Shop.AddBusinessProduct:input_type -> pixel_plaza.AddBusinessProductRequest
	110, // 90: pixel_plaza.Shop.GetBusinessProduct:input_type -> pixel_plaza.GetBusinessProductRequest
	112, // 91: pixel_plaza.Shop.UpdateBusinessProduct:input_type -> pixel_plaza.UpdateBusinessProductRequest
	114, // 92: pixel_plaza.Shop.SearchBusinessProducts:input_type -> pixel_plaza.SearchBusinessProductsRequest
	116, // 93: pixel_plaza.Shop.SuspendBusinessProduct:input_type -> pixel_plaza.SuspendBusinessProductRequest
	118, // 94: pixel_plaza.Shop.ActivateBusinessProduct:input_type -> pixel_plaza.ActivateBusinessProductRequest
	120, // 95: pixel_plaza.Shop.AddBranchProduct:input_type -> pixel_plaza.AddBranchProductRequest
	122, // 96: pixel_plaza.Shop.GetBranchProduct:input_type -> pixel_plaza.GetBranchProductRequest
	124, // 97: pixel_plaza.Shop.SearchBranchProducts:input_type -> pixel_plaza.SearchBranchProductsRequest
	126, // 98: pixel_plaza.Shop.UpdateBranchProduct:input_type -> pixel_plaza.UpdateBranchProductRequest
	25,  // 99: pixel_plaza.Shop.AddBusiness:output_type -> pixel_plaza.AddBusinessResponse
	27,  // 100: pixel_plaza.Shop.GetBusiness:output_type -> pixel_plaza.GetBusinessResponse
	29,  // 101: pixel_plaza.Shop.UpdateBusiness:output_type -> pixel_plaza.UpdateBusinessResponse
	31,  // 102: pixel_plaza.Shop.SetBusinessProfilePicture:output_type -> pixel_plaza.SetBusinessProfilePictureResponse
	33,  // 103: pixel_plaza.Shop.SuspendBusiness:output_type -> pixel_plaza.SuspendBusinessResponse
	35,  // 104: pixel_plaza.Shop.ActivateBusiness:output_type -> pixel_plaza.ActivateBusinessResponse
	37,  // 105: pixel_plaza.Shop.DeleteBusiness:output_type -> pixel_plaza.DeleteBusinessResponse
	39,  // 106: pixel_plaza.Shop.AddBusinessOwner:output_type -> pixel_plaza.AddBusinessOwnerResponse
	41,  // 107: pixel_plaza.Shop.RemoveBusinessOwner:output_type -> pixel_plaza.RemoveBusinessOwnerResponse
	43,  // 108: pixel_plaza.Shop.GetBusinessOwners:output_type -> pixel_plaza.GetBusinessOwnersResponse
	45,  // 109: pixel_plaza.Shop.AddBusinessClient:output_type -> pixel_plaza.AddBusinessClientResponse
	47,  // 110: pixel_plaza.Shop.IsBusinessClient:output_type -> pixel_plaza.IsBusinessClientResponse
	49,  // 111: pixel_plaza.Shop.AddMarketCategory:output_type -> pixel_plaza.AddMarketCategoryResponse
	51,  // 112: pixel_plaza.Shop.GetMarketCategory:output_type -> pixel_plaza.GetMarketCategoryResponse
	53,  // 113: pixel_plaza.Shop.UpdateMarketCategory:output_type -> pixel_plaza.UpdateMarketCategoryResponse
	55,  // 114: pixel_plaza.Shop.AddBusinessMarketCategory:output_type -> pixel_plaza.AddBusinessMarketCategoryResponse
	57,  // 115: pixel_plaza.Shop.GetBusinessMarketCategories:output_type -> pixel_plaza.GetBusinessMarketCategoriesResponse
	59,  // 116: pixel_plaza.Shop.AddStore:output_type -> pixel_plaza.AddStoreResponse
	61,  // 117: pixel_plaza.Shop.GetStore:output_type -> pixel_plaza.GetStoreResponse
	63,  // 118: pixel_plaza.Shop.DeleteStore:output_type -> pixel_plaza.DeleteStoreResponse
	65,  // 119: pixel_plaza.Shop.GetUnoccupiedStores:output_type -> pixel_plaza.GetUnoccupiedStoresResponse
	67,  // 120: pixel_plaza.Shop.AddBranch:output_type -> pixel_plaza.AddBranchResponse
	69,  // 121: pixel_plaza.Shop.GetBranch:output_type -> pixel_plaza.GetBranchResponse
	77,  // 122: pixel_plaza.Shop.GetBusinessBranches:output_type -> pixel_plaza.GetBusinessBranchesResponse
	71,  // 123: pixel_plaza.Shop.UpdateBranch:output_type -> pixel_plaza.UpdateBranchResponse
	73,  // 124: pixel_plaza.Shop.SuspendBranch:output_type -> pixel_plaza.SuspendBranchResponse
	75,  // 125: pixel_plaza.Shop.ActivateBranch:output_type -> pixel_plaza.ActivateBranchResponse
	79,  // 126: pixel_plaza.Shop.DeleteBranch:output_type -> pixel_plaza.DeleteBranchResponse
	81,  // 127: pixel_plaza.Shop.AddStoreBranchRent:output_type -> pixel_plaza.AddBranchRentResponse
	83,  // 128: pixel_plaza.Shop.GetStoreBranchRents:output_type -> pixel_plaza.GetBranchRentsResponse
	85,  // 129: pixel_plaza.Shop.UpdateStoreBranchRent:output_type -> pixel_plaza.UpdateBranchRentResponse
	87,  // 130: pixel_plaza.Shop.GetUnpaidBranchRents:output_type -> pixel_plaza.GetUnpaidBranchRentsResponse
	89,  // 131: pixel_plaza.Shop.GetBusinessUnpaidBranchRents:output_type -> pixel_plaza.GetBusinessUnpaidBranchRentsResponse
	91,  // 132: pixel_plaza.Shop.AddProductCategory:output_type -> pixel_plaza.AddProductCategoryResponse
	93,  // 133: pixel_plaza.Shop.GetProductCategory:output_type -> pixel_plaza.GetProductCategoryResponse
	95,  // 134: pixel_plaza.Shop.UpdateProductCategory:output_type -> pixel_plaza.UpdateProductCategoryResponse
	97,  // 135: pixel_plaza.Shop.AddProduct:output_type -> pixel_plaza.AddProductResponse
	99,  // 136: pixel_plaza.Shop.GetProduct:output_type -> pixel_plaza.GetProductResponse
	101, // 137: pixel_plaza.Shop.UpdateProduct:output_type -> pixel_plaza.UpdateProductResponse
	103, // 138: pixel_plaza.Shop.SearchProducts:output_type -> pixel_plaza.SearchProductsResponse
	105, // 139: pixel_plaza.Shop.SuspendProduct:output_type -> pixel_plaza.SuspendProductResponse
	107, // 140: pixel_plaza.Shop.ActivateProduct:output_type -> pixel_plaza.ActivateProductResponse
	109, // 141: pixel_plaza.Shop.AddBusinessProduct:output_type -> pixel_plaza.AddBusinessProductResponse
	111, // 142: pixel_plaza.Shop.GetBusinessProduct:output_type -> pixel_plaza.GetBusinessProductResponse
	113, // 143: pixel_plaza.Shop.UpdateBusinessProduct:output_type -> pixel_plaza.UpdateBusinessProductResponse
	115, // 144: pixel_plaza.Shop.SearchBusinessProducts:output_type -> pixel_plaza.SearchBusinessProductsResponse
	117, // 145: pixel_plaza.Shop.SuspendBusinessProduct:output_type -> pixel_plaza.SuspendBusinessProductResponse
	119, // 146: pixel_plaza.Shop.ActivateBusinessProduct:output_type -> pixel_plaza.ActivateBusinessProductResponse
	121, // 147: pixel_plaza.Shop.AddBranchProduct:output_type -> pixel_plaza.AddBranchProductResponse
	123, // 148: pixel_plaza.Shop.GetBranchProduct:output_type -> pixel_plaza.GetBranchProductResponse
	125, // 149: pixel_plaza.Shop.SearchBranchProducts:output_type -> pixel_plaza.SearchBranchProductsResponse
	127, // 150: pixel_plaza.Shop.UpdateBranchProduct:output_type -> pixel_plaza.UpdateBranchProductResponse
	99,  // [99:151] is the sub-list for method output_type
	47,  // [47:99] is the sub-list for method input_type
	47,  // [47:47] is the sub-list for extension type_name
	47,  // [47:47] is the sub-list for extension extendee
	0,   // [0:47] is the sub-list for field type_name
}

func init() { file_proto_pixel_plaza_shop_proto_init() }
func file_proto_pixel_plaza_shop_proto_init() {
	if File_proto_pixel_plaza_shop_proto != nil {
		return
	}
	file_proto_pixel_plaza_shop_proto_msgTypes[7].OneofWrappers = []any{}
	file_proto_pixel_plaza_shop_proto_msgTypes[9].OneofWrappers = []any{}
	file_proto_pixel_plaza_shop_proto_msgTypes[10].OneofWrappers = []any{}
	file_proto_pixel_plaza_shop_proto_msgTypes[11].OneofWrappers = []any{}
	file_proto_pixel_plaza_shop_proto_msgTypes[13].OneofWrappers = []any{}
	file_proto_pixel_plaza_shop_proto_msgTypes[14].OneofWrappers = []any{}
	file_proto_pixel_plaza_shop_proto_msgTypes[15].OneofWrappers = []any{}
	file_proto_pixel_plaza_shop_proto_msgTypes[16].OneofWrappers = []any{}
	file_proto_pixel_plaza_shop_proto_msgTypes[17].OneofWrappers = []any{}
	file_proto_pixel_plaza_shop_proto_msgTypes[18].OneofWrappers = []any{}
	file_proto_pixel_plaza_shop_proto_msgTypes[28].OneofWrappers = []any{}
	file_proto_pixel_plaza_shop_proto_msgTypes[52].OneofWrappers = []any{}
	file_proto_pixel_plaza_shop_proto_msgTypes[70].OneofWrappers = []any{}
	file_proto_pixel_plaza_shop_proto_msgTypes[82].OneofWrappers = []any{}
	file_proto_pixel_plaza_shop_proto_msgTypes[84].OneofWrappers = []any{}
	file_proto_pixel_plaza_shop_proto_msgTypes[94].OneofWrappers = []any{}
	file_proto_pixel_plaza_shop_proto_msgTypes[102].OneofWrappers = []any{}
	file_proto_pixel_plaza_shop_proto_msgTypes[114].OneofWrappers = []any{}
	file_proto_pixel_plaza_shop_proto_msgTypes[124].OneofWrappers = []any{}
	file_proto_pixel_plaza_shop_proto_msgTypes[126].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_pixel_plaza_shop_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   128,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_pixel_plaza_shop_proto_goTypes,
		DependencyIndexes: file_proto_pixel_plaza_shop_proto_depIdxs,
		MessageInfos:      file_proto_pixel_plaza_shop_proto_msgTypes,
	}.Build()
	File_proto_pixel_plaza_shop_proto = out.File
	file_proto_pixel_plaza_shop_proto_rawDesc = nil
	file_proto_pixel_plaza_shop_proto_goTypes = nil
	file_proto_pixel_plaza_shop_proto_depIdxs = nil
}
